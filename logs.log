2023-01-09 15:37:53,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 15:37:53,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 15:37:53,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 15:37:53,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 15:37:54,177:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-09 15:37:57,861:INFO:PyCaret ClassificationExperiment
2023-01-09 15:37:57,861:INFO:Logging name: clf-default-name
2023-01-09 15:37:57,861:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 15:37:57,861:INFO:version 3.0.0.rc7
2023-01-09 15:37:57,861:INFO:Initializing setup()
2023-01-09 15:37:57,861:INFO:self.USI: 5de0
2023-01-09 15:37:57,861:INFO:self._variable_keys: {'gpu_param', 'html_param', 'fold_groups_param', 'USI', '_ml_usecase', 'gpu_n_jobs_param', 'exp_id', 'logging_param', 'pipeline', 'memory', 'y_test', '_available_plots', 'y_train', 'n_jobs_param', 'X_train', 'fix_imbalance', 'fold_generator', 'fold_shuffle_param', 'exp_name_log', 'data', 'idx', 'target_param', 'is_multiclass', 'X', 'y', 'seed', 'X_test', 'log_plots_param'}
2023-01-09 15:37:57,861:INFO:Checking environment
2023-01-09 15:37:57,861:INFO:python_version: 3.8.2
2023-01-09 15:37:57,861:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2023-01-09 15:37:57,861:INFO:machine: AMD64
2023-01-09 15:37:57,861:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 15:37:57,868:INFO:Memory: svmem(total=34190110720, available=15168860160, percent=55.6, used=19021250560, free=15168860160)
2023-01-09 15:37:57,869:INFO:Physical Core: 16
2023-01-09 15:37:57,869:INFO:Logical Core: 24
2023-01-09 15:37:57,869:INFO:Checking libraries
2023-01-09 15:37:57,869:INFO:System:
2023-01-09 15:37:57,869:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2023-01-09 15:37:57,869:INFO:executable: c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\python.exe
2023-01-09 15:37:57,869:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 15:37:57,869:INFO:PyCaret required dependencies:
2023-01-09 15:37:57,869:INFO:                 pip: 22.3.1
2023-01-09 15:37:57,869:INFO:          setuptools: 41.2.0
2023-01-09 15:37:57,869:INFO:             pycaret: 3.0.0rc7
2023-01-09 15:37:57,869:INFO:             IPython: 8.8.0
2023-01-09 15:37:57,869:INFO:          ipywidgets: 8.0.4
2023-01-09 15:37:57,869:INFO:                tqdm: 4.64.1
2023-01-09 15:37:57,869:INFO:               numpy: 1.23.2
2023-01-09 15:37:57,869:INFO:              pandas: 1.4.4
2023-01-09 15:37:57,869:INFO:              jinja2: 3.1.2
2023-01-09 15:37:57,869:INFO:               scipy: 1.9.1
2023-01-09 15:37:57,869:INFO:              joblib: 1.2.0
2023-01-09 15:37:57,869:INFO:             sklearn: 1.1.2
2023-01-09 15:37:57,869:INFO:                pyod: 1.0.7
2023-01-09 15:37:57,869:INFO:            imblearn: 0.10.1
2023-01-09 15:37:57,869:INFO:   category_encoders: 2.5.1.post0
2023-01-09 15:37:57,869:INFO:            lightgbm: 3.3.4
2023-01-09 15:37:57,869:INFO:               numba: 0.56.4
2023-01-09 15:37:57,869:INFO:            requests: 2.28.1
2023-01-09 15:37:57,869:INFO:          matplotlib: 3.6.2
2023-01-09 15:37:57,869:INFO:          scikitplot: 0.3.7
2023-01-09 15:37:57,869:INFO:         yellowbrick: 1.5
2023-01-09 15:37:57,869:INFO:              plotly: 5.11.0
2023-01-09 15:37:57,869:INFO:             kaleido: 0.2.1
2023-01-09 15:37:57,869:INFO:         statsmodels: 0.13.5
2023-01-09 15:37:57,869:INFO:              sktime: 0.15.0
2023-01-09 15:37:57,869:INFO:               tbats: 1.1.2
2023-01-09 15:37:57,869:INFO:            pmdarima: 2.0.2
2023-01-09 15:37:57,869:INFO:              psutil: 5.9.4
2023-01-09 15:37:57,869:INFO:PyCaret optional dependencies:
2023-01-09 15:37:57,874:INFO:                shap: Not installed
2023-01-09 15:37:57,874:INFO:           interpret: Not installed
2023-01-09 15:37:57,874:INFO:                umap: Not installed
2023-01-09 15:37:57,874:INFO:    pandas_profiling: 3.6.2
2023-01-09 15:37:57,874:INFO:  explainerdashboard: Not installed
2023-01-09 15:37:57,874:INFO:             autoviz: Not installed
2023-01-09 15:37:57,874:INFO:           fairlearn: Not installed
2023-01-09 15:37:57,874:INFO:             xgboost: Not installed
2023-01-09 15:37:57,874:INFO:            catboost: Not installed
2023-01-09 15:37:57,874:INFO:              kmodes: Not installed
2023-01-09 15:37:57,874:INFO:             mlxtend: Not installed
2023-01-09 15:37:57,874:INFO:       statsforecast: Not installed
2023-01-09 15:37:57,875:INFO:        tune_sklearn: Not installed
2023-01-09 15:37:57,875:INFO:                 ray: Not installed
2023-01-09 15:37:57,875:INFO:            hyperopt: Not installed
2023-01-09 15:37:57,875:INFO:              optuna: Not installed
2023-01-09 15:37:57,875:INFO:               skopt: Not installed
2023-01-09 15:37:57,875:INFO:              mlflow: Not installed
2023-01-09 15:37:57,875:INFO:              gradio: Not installed
2023-01-09 15:37:57,875:INFO:             fastapi: Not installed
2023-01-09 15:37:57,875:INFO:             uvicorn: Not installed
2023-01-09 15:37:57,875:INFO:              m2cgen: Not installed
2023-01-09 15:37:57,875:INFO:           evidently: Not installed
2023-01-09 15:37:57,875:INFO:                nltk: Not installed
2023-01-09 15:37:57,875:INFO:            pyLDAvis: Not installed
2023-01-09 15:37:57,875:INFO:              gensim: Not installed
2023-01-09 15:37:57,875:INFO:               spacy: Not installed
2023-01-09 15:37:57,875:INFO:           wordcloud: Not installed
2023-01-09 15:37:57,875:INFO:            textblob: Not installed
2023-01-09 15:37:57,875:INFO:               fugue: Not installed
2023-01-09 15:37:57,875:INFO:           streamlit: Not installed
2023-01-09 15:37:57,875:INFO:             prophet: Not installed
2023-01-09 15:37:57,875:INFO:None
2023-01-09 15:37:57,875:INFO:Set up data.
2023-01-09 15:37:57,878:INFO:Set up train/test split.
2023-01-09 15:37:57,880:INFO:Set up index.
2023-01-09 15:37:57,880:INFO:Set up folding strategy.
2023-01-09 15:37:57,880:INFO:Assigning column types.
2023-01-09 15:37:57,882:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 15:37:57,902:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 15:37:57,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:37:57,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:57,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:57,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 15:37:57,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:37:57,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:57,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:57,976:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 15:37:57,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:37:58,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:37:58,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,045:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 15:37:58,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,119:INFO:Preparing preprocessing pipeline...
2023-01-09 15:37:58,120:INFO:Set up column name cleaning.
2023-01-09 15:37:58,120:INFO:Set up label encoding.
2023-01-09 15:37:58,120:INFO:Set up simple imputation.
2023-01-09 15:37:58,159:INFO:Finished creating preprocessing pipeline.
2023-01-09 15:37:58,162:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 15:37:58,162:INFO:Creating final display dataframe.
2023-01-09 15:37:58,326:INFO:Setup _display_container:                     Description                   Value
0                    Session id                    7330
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (1902, 22)
5        Transformed data shape              (1902, 22)
6   Transformed train set shape              (1331, 22)
7    Transformed test set shape               (571, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    5de0
2023-01-09 15:37:58,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:37:58,398:INFO:setup() successfully completed in 0.54s...............
2023-01-09 15:38:09,240:INFO:PyCaret ClassificationExperiment
2023-01-09 15:38:09,240:INFO:Logging name: clf-default-name
2023-01-09 15:38:09,240:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 15:38:09,240:INFO:version 3.0.0.rc7
2023-01-09 15:38:09,240:INFO:Initializing setup()
2023-01-09 15:38:09,240:INFO:self.USI: 0baf
2023-01-09 15:38:09,240:INFO:self._variable_keys: {'gpu_param', 'html_param', 'fold_groups_param', 'USI', '_ml_usecase', 'gpu_n_jobs_param', 'exp_id', 'logging_param', 'pipeline', 'memory', 'y_test', '_available_plots', 'y_train', 'n_jobs_param', 'X_train', 'fix_imbalance', 'fold_generator', 'fold_shuffle_param', 'exp_name_log', 'data', 'idx', 'target_param', 'is_multiclass', 'X', 'y', 'seed', 'X_test', 'log_plots_param'}
2023-01-09 15:38:09,240:INFO:Checking environment
2023-01-09 15:38:09,240:INFO:python_version: 3.8.2
2023-01-09 15:38:09,240:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2023-01-09 15:38:09,240:INFO:machine: AMD64
2023-01-09 15:38:09,240:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 15:38:09,247:INFO:Memory: svmem(total=34190110720, available=15180079104, percent=55.6, used=19010031616, free=15180079104)
2023-01-09 15:38:09,247:INFO:Physical Core: 16
2023-01-09 15:38:09,247:INFO:Logical Core: 24
2023-01-09 15:38:09,247:INFO:Checking libraries
2023-01-09 15:38:09,247:INFO:System:
2023-01-09 15:38:09,247:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2023-01-09 15:38:09,247:INFO:executable: c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\python.exe
2023-01-09 15:38:09,247:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 15:38:09,247:INFO:PyCaret required dependencies:
2023-01-09 15:38:09,247:INFO:                 pip: 22.3.1
2023-01-09 15:38:09,247:INFO:          setuptools: 41.2.0
2023-01-09 15:38:09,247:INFO:             pycaret: 3.0.0rc7
2023-01-09 15:38:09,247:INFO:             IPython: 8.8.0
2023-01-09 15:38:09,247:INFO:          ipywidgets: 8.0.4
2023-01-09 15:38:09,247:INFO:                tqdm: 4.64.1
2023-01-09 15:38:09,247:INFO:               numpy: 1.23.2
2023-01-09 15:38:09,247:INFO:              pandas: 1.4.4
2023-01-09 15:38:09,247:INFO:              jinja2: 3.1.2
2023-01-09 15:38:09,247:INFO:               scipy: 1.9.1
2023-01-09 15:38:09,247:INFO:              joblib: 1.2.0
2023-01-09 15:38:09,247:INFO:             sklearn: 1.1.2
2023-01-09 15:38:09,247:INFO:                pyod: 1.0.7
2023-01-09 15:38:09,247:INFO:            imblearn: 0.10.1
2023-01-09 15:38:09,247:INFO:   category_encoders: 2.5.1.post0
2023-01-09 15:38:09,247:INFO:            lightgbm: 3.3.4
2023-01-09 15:38:09,247:INFO:               numba: 0.56.4
2023-01-09 15:38:09,247:INFO:            requests: 2.28.1
2023-01-09 15:38:09,247:INFO:          matplotlib: 3.6.2
2023-01-09 15:38:09,247:INFO:          scikitplot: 0.3.7
2023-01-09 15:38:09,247:INFO:         yellowbrick: 1.5
2023-01-09 15:38:09,247:INFO:              plotly: 5.11.0
2023-01-09 15:38:09,247:INFO:             kaleido: 0.2.1
2023-01-09 15:38:09,247:INFO:         statsmodels: 0.13.5
2023-01-09 15:38:09,247:INFO:              sktime: 0.15.0
2023-01-09 15:38:09,247:INFO:               tbats: 1.1.2
2023-01-09 15:38:09,247:INFO:            pmdarima: 2.0.2
2023-01-09 15:38:09,247:INFO:              psutil: 5.9.4
2023-01-09 15:38:09,247:INFO:PyCaret optional dependencies:
2023-01-09 15:38:09,248:INFO:                shap: Not installed
2023-01-09 15:38:09,248:INFO:           interpret: Not installed
2023-01-09 15:38:09,248:INFO:                umap: Not installed
2023-01-09 15:38:09,248:INFO:    pandas_profiling: 3.6.2
2023-01-09 15:38:09,248:INFO:  explainerdashboard: Not installed
2023-01-09 15:38:09,248:INFO:             autoviz: Not installed
2023-01-09 15:38:09,248:INFO:           fairlearn: Not installed
2023-01-09 15:38:09,248:INFO:             xgboost: Not installed
2023-01-09 15:38:09,248:INFO:            catboost: Not installed
2023-01-09 15:38:09,248:INFO:              kmodes: Not installed
2023-01-09 15:38:09,248:INFO:             mlxtend: Not installed
2023-01-09 15:38:09,248:INFO:       statsforecast: Not installed
2023-01-09 15:38:09,248:INFO:        tune_sklearn: Not installed
2023-01-09 15:38:09,248:INFO:                 ray: Not installed
2023-01-09 15:38:09,248:INFO:            hyperopt: Not installed
2023-01-09 15:38:09,248:INFO:              optuna: Not installed
2023-01-09 15:38:09,248:INFO:               skopt: Not installed
2023-01-09 15:38:09,248:INFO:              mlflow: Not installed
2023-01-09 15:38:09,248:INFO:              gradio: Not installed
2023-01-09 15:38:09,248:INFO:             fastapi: Not installed
2023-01-09 15:38:09,248:INFO:             uvicorn: Not installed
2023-01-09 15:38:09,248:INFO:              m2cgen: Not installed
2023-01-09 15:38:09,248:INFO:           evidently: Not installed
2023-01-09 15:38:09,248:INFO:                nltk: Not installed
2023-01-09 15:38:09,248:INFO:            pyLDAvis: Not installed
2023-01-09 15:38:09,248:INFO:              gensim: Not installed
2023-01-09 15:38:09,248:INFO:               spacy: Not installed
2023-01-09 15:38:09,248:INFO:           wordcloud: Not installed
2023-01-09 15:38:09,248:INFO:            textblob: Not installed
2023-01-09 15:38:09,248:INFO:               fugue: Not installed
2023-01-09 15:38:09,248:INFO:           streamlit: Not installed
2023-01-09 15:38:09,248:INFO:             prophet: Not installed
2023-01-09 15:38:09,248:INFO:None
2023-01-09 15:38:09,248:INFO:Set up data.
2023-01-09 15:38:09,252:INFO:Set up train/test split.
2023-01-09 15:38:09,253:INFO:Set up index.
2023-01-09 15:38:09,253:INFO:Set up folding strategy.
2023-01-09 15:38:09,253:INFO:Assigning column types.
2023-01-09 15:38:09,255:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 15:38:09,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,275:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,308:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,321:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 15:38:09,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,373:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 15:38:09,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,387:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 15:38:09,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,454:INFO:Preparing preprocessing pipeline...
2023-01-09 15:38:09,454:INFO:Set up column name cleaning.
2023-01-09 15:38:09,455:INFO:Set up label encoding.
2023-01-09 15:38:09,455:INFO:Set up simple imputation.
2023-01-09 15:38:09,492:INFO:Finished creating preprocessing pipeline.
2023-01-09 15:38:09,494:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 15:38:09,494:INFO:Creating final display dataframe.
2023-01-09 15:38:09,651:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (2113, 22)
5        Transformed data shape              (2113, 22)
6   Transformed train set shape              (1479, 22)
7    Transformed test set shape               (634, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    0baf
2023-01-09 15:38:09,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:09,721:INFO:setup() successfully completed in 0.48s...............
2023-01-09 15:38:16,475:INFO:Initializing compare_models()
2023-01-09 15:38:16,475:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 15:38:16,475:INFO:Checking exceptions
2023-01-09 15:38:16,476:INFO:Preparing display monitor
2023-01-09 15:38:16,488:INFO:Initializing Logistic Regression
2023-01-09 15:38:16,488:INFO:Total runtime is 0.0 minutes
2023-01-09 15:38:16,489:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:16,489:INFO:Initializing create_model()
2023-01-09 15:38:16,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:16,490:INFO:Checking exceptions
2023-01-09 15:38:16,490:INFO:Importing libraries
2023-01-09 15:38:16,490:INFO:Copying training dataset
2023-01-09 15:38:16,491:INFO:Defining folds
2023-01-09 15:38:16,491:INFO:Declaring metric variables
2023-01-09 15:38:16,492:INFO:Importing untrained model
2023-01-09 15:38:16,493:INFO:Logistic Regression Imported successfully
2023-01-09 15:38:16,496:INFO:Starting cross validation
2023-01-09 15:38:16,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:17,958:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,960:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,962:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,967:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,972:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,973:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,979:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,983:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,991:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:17,993:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,058:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,058:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,058:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,061:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,061:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,063:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,063:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,064:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,065:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,066:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,067:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,078:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,079:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,080:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,088:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,089:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,090:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,096:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,096:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,097:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:18,098:INFO:Calculating mean and std
2023-01-09 15:38:18,099:INFO:Creating metrics dataframe
2023-01-09 15:38:18,101:INFO:Uploading results into container
2023-01-09 15:38:18,102:INFO:Uploading model into container now
2023-01-09 15:38:18,102:INFO:_master_model_container: 1
2023-01-09 15:38:18,102:INFO:_display_container: 2
2023-01-09 15:38:18,102:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 15:38:18,102:INFO:create_model() successfully completed......................................
2023-01-09 15:38:18,178:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:18,178:INFO:Creating metrics dataframe
2023-01-09 15:38:18,182:INFO:Initializing K Neighbors Classifier
2023-01-09 15:38:18,182:INFO:Total runtime is 0.0282318909962972 minutes
2023-01-09 15:38:18,184:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:18,184:INFO:Initializing create_model()
2023-01-09 15:38:18,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:18,184:INFO:Checking exceptions
2023-01-09 15:38:18,184:INFO:Importing libraries
2023-01-09 15:38:18,184:INFO:Copying training dataset
2023-01-09 15:38:18,185:INFO:Defining folds
2023-01-09 15:38:18,185:INFO:Declaring metric variables
2023-01-09 15:38:18,186:INFO:Importing untrained model
2023-01-09 15:38:18,188:INFO:K Neighbors Classifier Imported successfully
2023-01-09 15:38:18,191:INFO:Starting cross validation
2023-01-09 15:38:18,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:19,120:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,121:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,121:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,121:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,123:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,136:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,137:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,137:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,138:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,138:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,139:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,141:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,142:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,142:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,148:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,148:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,148:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,149:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,149:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,150:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,150:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,150:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,151:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,152:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,153:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,154:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,156:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,156:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,157:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,158:INFO:Calculating mean and std
2023-01-09 15:38:19,159:INFO:Creating metrics dataframe
2023-01-09 15:38:19,161:INFO:Uploading results into container
2023-01-09 15:38:19,161:INFO:Uploading model into container now
2023-01-09 15:38:19,161:INFO:_master_model_container: 2
2023-01-09 15:38:19,161:INFO:_display_container: 2
2023-01-09 15:38:19,162:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 15:38:19,162:INFO:create_model() successfully completed......................................
2023-01-09 15:38:19,246:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:19,246:INFO:Creating metrics dataframe
2023-01-09 15:38:19,250:INFO:Initializing Naive Bayes
2023-01-09 15:38:19,250:INFO:Total runtime is 0.0460428237915039 minutes
2023-01-09 15:38:19,252:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:19,252:INFO:Initializing create_model()
2023-01-09 15:38:19,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:19,252:INFO:Checking exceptions
2023-01-09 15:38:19,252:INFO:Importing libraries
2023-01-09 15:38:19,252:INFO:Copying training dataset
2023-01-09 15:38:19,253:INFO:Defining folds
2023-01-09 15:38:19,253:INFO:Declaring metric variables
2023-01-09 15:38:19,255:INFO:Importing untrained model
2023-01-09 15:38:19,256:INFO:Naive Bayes Imported successfully
2023-01-09 15:38:19,259:INFO:Starting cross validation
2023-01-09 15:38:19,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:19,294:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,294:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,295:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,296:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,296:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,296:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,297:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,297:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,297:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,301:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,301:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,302:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,307:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,307:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,308:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,308:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,308:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:19,308:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,048:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,049:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,049:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,051:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,053:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,053:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,055:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,056:INFO:Calculating mean and std
2023-01-09 15:38:20,057:INFO:Creating metrics dataframe
2023-01-09 15:38:20,058:INFO:Uploading results into container
2023-01-09 15:38:20,059:INFO:Uploading model into container now
2023-01-09 15:38:20,059:INFO:_master_model_container: 3
2023-01-09 15:38:20,059:INFO:_display_container: 2
2023-01-09 15:38:20,059:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 15:38:20,059:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,131:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,131:INFO:Creating metrics dataframe
2023-01-09 15:38:20,135:INFO:Initializing Decision Tree Classifier
2023-01-09 15:38:20,135:INFO:Total runtime is 0.06078910827636718 minutes
2023-01-09 15:38:20,137:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,137:INFO:Initializing create_model()
2023-01-09 15:38:20,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,137:INFO:Checking exceptions
2023-01-09 15:38:20,137:INFO:Importing libraries
2023-01-09 15:38:20,137:INFO:Copying training dataset
2023-01-09 15:38:20,138:INFO:Defining folds
2023-01-09 15:38:20,138:INFO:Declaring metric variables
2023-01-09 15:38:20,139:INFO:Importing untrained model
2023-01-09 15:38:20,141:INFO:Decision Tree Classifier Imported successfully
2023-01-09 15:38:20,143:INFO:Starting cross validation
2023-01-09 15:38:20,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:20,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,178:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,178:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,178:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,180:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,180:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,181:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,181:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,182:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,182:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,182:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,183:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,183:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,184:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,184:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,185:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,186:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,186:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,187:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,189:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,189:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,190:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,191:INFO:Calculating mean and std
2023-01-09 15:38:20,191:INFO:Creating metrics dataframe
2023-01-09 15:38:20,193:INFO:Uploading results into container
2023-01-09 15:38:20,193:INFO:Uploading model into container now
2023-01-09 15:38:20,193:INFO:_master_model_container: 4
2023-01-09 15:38:20,193:INFO:_display_container: 2
2023-01-09 15:38:20,193:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-01-09 15:38:20,193:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,262:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,262:INFO:Creating metrics dataframe
2023-01-09 15:38:20,267:INFO:Initializing SVM - Linear Kernel
2023-01-09 15:38:20,268:INFO:Total runtime is 0.06300018231074014 minutes
2023-01-09 15:38:20,269:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,270:INFO:Initializing create_model()
2023-01-09 15:38:20,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,270:INFO:Checking exceptions
2023-01-09 15:38:20,270:INFO:Importing libraries
2023-01-09 15:38:20,270:INFO:Copying training dataset
2023-01-09 15:38:20,271:INFO:Defining folds
2023-01-09 15:38:20,271:INFO:Declaring metric variables
2023-01-09 15:38:20,273:INFO:Importing untrained model
2023-01-09 15:38:20,274:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 15:38:20,277:INFO:Starting cross validation
2023-01-09 15:38:20,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:20,310:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,310:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,310:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,310:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,310:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,312:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,312:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,313:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,313:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,316:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,317:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,317:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,318:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,319:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,319:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,319:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,319:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,319:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:20,320:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,322:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,323:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,323:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,323:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,323:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,323:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,325:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,326:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:20,326:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,328:INFO:Calculating mean and std
2023-01-09 15:38:20,329:INFO:Creating metrics dataframe
2023-01-09 15:38:20,330:INFO:Uploading results into container
2023-01-09 15:38:20,331:INFO:Uploading model into container now
2023-01-09 15:38:20,331:INFO:_master_model_container: 5
2023-01-09 15:38:20,331:INFO:_display_container: 2
2023-01-09 15:38:20,332:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 15:38:20,332:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,397:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,397:INFO:Creating metrics dataframe
2023-01-09 15:38:20,402:INFO:Initializing Ridge Classifier
2023-01-09 15:38:20,402:INFO:Total runtime is 0.06523183981577554 minutes
2023-01-09 15:38:20,404:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,404:INFO:Initializing create_model()
2023-01-09 15:38:20,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,404:INFO:Checking exceptions
2023-01-09 15:38:20,404:INFO:Importing libraries
2023-01-09 15:38:20,404:INFO:Copying training dataset
2023-01-09 15:38:20,405:INFO:Defining folds
2023-01-09 15:38:20,405:INFO:Declaring metric variables
2023-01-09 15:38:20,406:INFO:Importing untrained model
2023-01-09 15:38:20,407:INFO:Ridge Classifier Imported successfully
2023-01-09 15:38:20,411:INFO:Starting cross validation
2023-01-09 15:38:20,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,438:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,440:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,440:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,440:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,441:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,441:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,441:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,441:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,442:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,443:INFO:Calculating mean and std
2023-01-09 15:38:20,443:INFO:Creating metrics dataframe
2023-01-09 15:38:20,445:INFO:Uploading results into container
2023-01-09 15:38:20,446:INFO:Uploading model into container now
2023-01-09 15:38:20,446:INFO:_master_model_container: 6
2023-01-09 15:38:20,446:INFO:_display_container: 2
2023-01-09 15:38:20,446:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=123, solver='auto', tol=0.001)
2023-01-09 15:38:20,446:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,519:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,519:INFO:Creating metrics dataframe
2023-01-09 15:38:20,523:INFO:Initializing Random Forest Classifier
2023-01-09 15:38:20,523:INFO:Total runtime is 0.06726054747899372 minutes
2023-01-09 15:38:20,526:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,526:INFO:Initializing create_model()
2023-01-09 15:38:20,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,526:INFO:Checking exceptions
2023-01-09 15:38:20,526:INFO:Importing libraries
2023-01-09 15:38:20,526:INFO:Copying training dataset
2023-01-09 15:38:20,527:INFO:Defining folds
2023-01-09 15:38:20,527:INFO:Declaring metric variables
2023-01-09 15:38:20,528:INFO:Importing untrained model
2023-01-09 15:38:20,530:INFO:Random Forest Classifier Imported successfully
2023-01-09 15:38:20,533:INFO:Starting cross validation
2023-01-09 15:38:20,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:20,697:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,697:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,698:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,699:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,700:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,701:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,701:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,701:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,701:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,701:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,702:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,702:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,702:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,702:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,703:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,703:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,704:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,705:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,706:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,706:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,707:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,707:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,707:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,708:INFO:Calculating mean and std
2023-01-09 15:38:20,709:INFO:Creating metrics dataframe
2023-01-09 15:38:20,711:INFO:Uploading results into container
2023-01-09 15:38:20,711:INFO:Uploading model into container now
2023-01-09 15:38:20,711:INFO:_master_model_container: 7
2023-01-09 15:38:20,711:INFO:_display_container: 2
2023-01-09 15:38:20,711:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-01-09 15:38:20,711:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,781:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,781:INFO:Creating metrics dataframe
2023-01-09 15:38:20,786:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 15:38:20,786:INFO:Total runtime is 0.07164200941721598 minutes
2023-01-09 15:38:20,788:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,788:INFO:Initializing create_model()
2023-01-09 15:38:20,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,788:INFO:Checking exceptions
2023-01-09 15:38:20,788:INFO:Importing libraries
2023-01-09 15:38:20,788:INFO:Copying training dataset
2023-01-09 15:38:20,789:INFO:Defining folds
2023-01-09 15:38:20,789:INFO:Declaring metric variables
2023-01-09 15:38:20,790:INFO:Importing untrained model
2023-01-09 15:38:20,792:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 15:38:20,795:INFO:Starting cross validation
2023-01-09 15:38:20,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,820:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 15:38:20,830:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,831:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,832:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,833:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,833:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,833:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,834:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,834:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,835:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,837:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,838:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,838:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:20,839:INFO:Calculating mean and std
2023-01-09 15:38:20,840:INFO:Creating metrics dataframe
2023-01-09 15:38:20,841:INFO:Uploading results into container
2023-01-09 15:38:20,842:INFO:Uploading model into container now
2023-01-09 15:38:20,842:INFO:_master_model_container: 8
2023-01-09 15:38:20,842:INFO:_display_container: 2
2023-01-09 15:38:20,842:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 15:38:20,842:INFO:create_model() successfully completed......................................
2023-01-09 15:38:20,909:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:20,909:INFO:Creating metrics dataframe
2023-01-09 15:38:20,913:INFO:Initializing Ada Boost Classifier
2023-01-09 15:38:20,913:INFO:Total runtime is 0.0737598180770874 minutes
2023-01-09 15:38:20,916:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:20,916:INFO:Initializing create_model()
2023-01-09 15:38:20,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:20,916:INFO:Checking exceptions
2023-01-09 15:38:20,916:INFO:Importing libraries
2023-01-09 15:38:20,916:INFO:Copying training dataset
2023-01-09 15:38:20,918:INFO:Defining folds
2023-01-09 15:38:20,918:INFO:Declaring metric variables
2023-01-09 15:38:20,919:INFO:Importing untrained model
2023-01-09 15:38:20,920:INFO:Ada Boost Classifier Imported successfully
2023-01-09 15:38:20,923:INFO:Starting cross validation
2023-01-09 15:38:20,923:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:21,011:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,012:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,012:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,013:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,013:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,013:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,018:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,018:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,018:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,019:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,019:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,020:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,025:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,025:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,025:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,025:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,026:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,026:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,028:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,028:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,029:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,029:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,029:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,029:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,029:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,030:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,030:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,040:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,040:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,041:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,042:INFO:Calculating mean and std
2023-01-09 15:38:21,042:INFO:Creating metrics dataframe
2023-01-09 15:38:21,044:INFO:Uploading results into container
2023-01-09 15:38:21,044:INFO:Uploading model into container now
2023-01-09 15:38:21,044:INFO:_master_model_container: 9
2023-01-09 15:38:21,044:INFO:_display_container: 2
2023-01-09 15:38:21,044:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-01-09 15:38:21,045:INFO:create_model() successfully completed......................................
2023-01-09 15:38:21,119:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:21,119:INFO:Creating metrics dataframe
2023-01-09 15:38:21,125:INFO:Initializing Gradient Boosting Classifier
2023-01-09 15:38:21,125:INFO:Total runtime is 0.07728215058644612 minutes
2023-01-09 15:38:21,126:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:21,126:INFO:Initializing create_model()
2023-01-09 15:38:21,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:21,126:INFO:Checking exceptions
2023-01-09 15:38:21,126:INFO:Importing libraries
2023-01-09 15:38:21,126:INFO:Copying training dataset
2023-01-09 15:38:21,127:INFO:Defining folds
2023-01-09 15:38:21,127:INFO:Declaring metric variables
2023-01-09 15:38:21,129:INFO:Importing untrained model
2023-01-09 15:38:21,130:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 15:38:21,133:INFO:Starting cross validation
2023-01-09 15:38:21,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:21,767:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,768:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,768:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,790:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,790:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,791:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,803:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,803:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,803:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,808:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,809:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,809:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,811:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,811:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,811:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,818:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,819:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,819:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,825:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,825:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,825:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,827:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,828:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,828:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,828:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,828:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,829:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,840:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,840:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,841:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,842:INFO:Calculating mean and std
2023-01-09 15:38:21,843:INFO:Creating metrics dataframe
2023-01-09 15:38:21,843:INFO:Uploading results into container
2023-01-09 15:38:21,845:INFO:Uploading model into container now
2023-01-09 15:38:21,845:INFO:_master_model_container: 10
2023-01-09 15:38:21,845:INFO:_display_container: 2
2023-01-09 15:38:21,845:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 15:38:21,845:INFO:create_model() successfully completed......................................
2023-01-09 15:38:21,912:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:21,912:INFO:Creating metrics dataframe
2023-01-09 15:38:21,917:INFO:Initializing Linear Discriminant Analysis
2023-01-09 15:38:21,918:INFO:Total runtime is 0.09050745566685994 minutes
2023-01-09 15:38:21,919:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:21,919:INFO:Initializing create_model()
2023-01-09 15:38:21,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:21,919:INFO:Checking exceptions
2023-01-09 15:38:21,919:INFO:Importing libraries
2023-01-09 15:38:21,919:INFO:Copying training dataset
2023-01-09 15:38:21,920:INFO:Defining folds
2023-01-09 15:38:21,920:INFO:Declaring metric variables
2023-01-09 15:38:21,922:INFO:Importing untrained model
2023-01-09 15:38:21,923:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 15:38:21,927:INFO:Starting cross validation
2023-01-09 15:38:21,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:21,961:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,962:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,962:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,962:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,963:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,963:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,963:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,963:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,965:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,965:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,965:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,965:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,965:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,966:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,966:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,966:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,966:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,967:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,967:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,967:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,969:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,969:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,970:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,970:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,970:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,971:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,971:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,971:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,971:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:21,973:INFO:Calculating mean and std
2023-01-09 15:38:21,974:INFO:Creating metrics dataframe
2023-01-09 15:38:21,975:INFO:Uploading results into container
2023-01-09 15:38:21,975:INFO:Uploading model into container now
2023-01-09 15:38:21,975:INFO:_master_model_container: 11
2023-01-09 15:38:21,975:INFO:_display_container: 2
2023-01-09 15:38:21,975:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 15:38:21,975:INFO:create_model() successfully completed......................................
2023-01-09 15:38:22,049:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:22,049:INFO:Creating metrics dataframe
2023-01-09 15:38:22,053:INFO:Initializing Extra Trees Classifier
2023-01-09 15:38:22,055:INFO:Total runtime is 0.09278355836868286 minutes
2023-01-09 15:38:22,056:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:22,056:INFO:Initializing create_model()
2023-01-09 15:38:22,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:22,056:INFO:Checking exceptions
2023-01-09 15:38:22,056:INFO:Importing libraries
2023-01-09 15:38:22,056:INFO:Copying training dataset
2023-01-09 15:38:22,057:INFO:Defining folds
2023-01-09 15:38:22,057:INFO:Declaring metric variables
2023-01-09 15:38:22,058:INFO:Importing untrained model
2023-01-09 15:38:22,060:INFO:Extra Trees Classifier Imported successfully
2023-01-09 15:38:22,062:INFO:Starting cross validation
2023-01-09 15:38:22,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:22,200:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,201:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,201:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,201:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,201:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,201:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,202:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,202:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,202:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,202:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,203:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,203:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,203:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,203:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,204:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,204:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,204:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,208:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,209:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,209:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,210:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,210:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,211:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,220:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,220:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,220:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,225:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,226:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,226:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,227:INFO:Calculating mean and std
2023-01-09 15:38:22,228:INFO:Creating metrics dataframe
2023-01-09 15:38:22,229:INFO:Uploading results into container
2023-01-09 15:38:22,230:INFO:Uploading model into container now
2023-01-09 15:38:22,230:INFO:_master_model_container: 12
2023-01-09 15:38:22,230:INFO:_display_container: 2
2023-01-09 15:38:22,230:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-01-09 15:38:22,230:INFO:create_model() successfully completed......................................
2023-01-09 15:38:22,301:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:22,301:INFO:Creating metrics dataframe
2023-01-09 15:38:22,307:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 15:38:22,307:INFO:Total runtime is 0.09698249499003092 minutes
2023-01-09 15:38:22,308:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:22,309:INFO:Initializing create_model()
2023-01-09 15:38:22,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:22,309:INFO:Checking exceptions
2023-01-09 15:38:22,309:INFO:Importing libraries
2023-01-09 15:38:22,309:INFO:Copying training dataset
2023-01-09 15:38:22,310:INFO:Defining folds
2023-01-09 15:38:22,310:INFO:Declaring metric variables
2023-01-09 15:38:22,311:INFO:Importing untrained model
2023-01-09 15:38:22,313:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:38:22,315:INFO:Starting cross validation
2023-01-09 15:38:22,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:22,462:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,463:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,463:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,464:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,465:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,465:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,467:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,467:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,468:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,470:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,471:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,472:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,477:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,478:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,478:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,480:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,481:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,481:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,482:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,483:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,483:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,490:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,491:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,491:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,495:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,496:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,496:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,529:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,530:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,530:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,531:INFO:Calculating mean and std
2023-01-09 15:38:22,532:INFO:Creating metrics dataframe
2023-01-09 15:38:22,533:INFO:Uploading results into container
2023-01-09 15:38:22,534:INFO:Uploading model into container now
2023-01-09 15:38:22,535:INFO:_master_model_container: 13
2023-01-09 15:38:22,535:INFO:_display_container: 2
2023-01-09 15:38:22,535:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:22,535:INFO:create_model() successfully completed......................................
2023-01-09 15:38:22,603:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:22,603:INFO:Creating metrics dataframe
2023-01-09 15:38:22,610:INFO:Initializing Dummy Classifier
2023-01-09 15:38:22,610:INFO:Total runtime is 0.1020337144533793 minutes
2023-01-09 15:38:22,611:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:22,612:INFO:Initializing create_model()
2023-01-09 15:38:22,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FFF0A7130>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:22,612:INFO:Checking exceptions
2023-01-09 15:38:22,612:INFO:Importing libraries
2023-01-09 15:38:22,612:INFO:Copying training dataset
2023-01-09 15:38:22,613:INFO:Defining folds
2023-01-09 15:38:22,613:INFO:Declaring metric variables
2023-01-09 15:38:22,614:INFO:Importing untrained model
2023-01-09 15:38:22,615:INFO:Dummy Classifier Imported successfully
2023-01-09 15:38:22,619:INFO:Starting cross validation
2023-01-09 15:38:22,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:22,643:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,643:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,643:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,643:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,644:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,644:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,644:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,644:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,646:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,646:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,647:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,647:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,648:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,650:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,650:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,650:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,650:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,651:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,654:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,654:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,655:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,655:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,655:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,655:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,656:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,656:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:38:22,656:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:22,657:INFO:Calculating mean and std
2023-01-09 15:38:22,658:INFO:Creating metrics dataframe
2023-01-09 15:38:22,659:INFO:Uploading results into container
2023-01-09 15:38:22,660:INFO:Uploading model into container now
2023-01-09 15:38:22,660:INFO:_master_model_container: 14
2023-01-09 15:38:22,660:INFO:_display_container: 2
2023-01-09 15:38:22,660:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-01-09 15:38:22,660:INFO:create_model() successfully completed......................................
2023-01-09 15:38:22,736:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:22,736:INFO:Creating metrics dataframe
2023-01-09 15:38:22,745:INFO:Initializing create_model()
2023-01-09 15:38:22,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:22,745:INFO:Checking exceptions
2023-01-09 15:38:22,746:INFO:Importing libraries
2023-01-09 15:38:22,746:INFO:Copying training dataset
2023-01-09 15:38:22,747:INFO:Defining folds
2023-01-09 15:38:22,747:INFO:Declaring metric variables
2023-01-09 15:38:22,747:INFO:Importing untrained model
2023-01-09 15:38:22,747:INFO:Declaring custom model
2023-01-09 15:38:22,748:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:38:22,748:INFO:Cross validation set to False
2023-01-09 15:38:22,748:INFO:Fitting Model
2023-01-09 15:38:22,953:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:22,953:INFO:create_model() successfully completed......................................
2023-01-09 15:38:23,047:INFO:_master_model_container: 14
2023-01-09 15:38:23,047:INFO:_display_container: 2
2023-01-09 15:38:23,048:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:23,048:INFO:compare_models() successfully completed......................................
2023-01-09 15:38:31,956:INFO:gpu_param set to False
2023-01-09 15:38:31,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:31,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:32,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:32,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 15:38:37,964:INFO:Initializing create_model()
2023-01-09 15:38:37,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:37,964:INFO:Checking exceptions
2023-01-09 15:38:37,972:INFO:Importing libraries
2023-01-09 15:38:37,972:INFO:Copying training dataset
2023-01-09 15:38:37,973:INFO:Defining folds
2023-01-09 15:38:37,973:INFO:Declaring metric variables
2023-01-09 15:38:37,975:INFO:Importing untrained model
2023-01-09 15:38:37,977:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:38:37,979:INFO:Starting cross validation
2023-01-09 15:38:37,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:38,118:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,118:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,118:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,130:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,130:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,131:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,131:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,131:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,132:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,132:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,132:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,132:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,132:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,133:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,142:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,142:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,143:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,143:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,143:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,145:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,155:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,156:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,156:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,162:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,163:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,163:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,195:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,197:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,197:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:38,198:INFO:Calculating mean and std
2023-01-09 15:38:38,199:INFO:Creating metrics dataframe
2023-01-09 15:38:38,201:INFO:Finalizing model
2023-01-09 15:38:38,392:INFO:Uploading results into container
2023-01-09 15:38:38,392:INFO:Uploading model into container now
2023-01-09 15:38:38,398:INFO:_master_model_container: 15
2023-01-09 15:38:38,398:INFO:_display_container: 3
2023-01-09 15:38:38,398:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:38,398:INFO:create_model() successfully completed......................................
2023-01-09 15:38:52,717:INFO:Initializing tune_model()
2023-01-09 15:38:52,717:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>)
2023-01-09 15:38:52,717:INFO:Checking exceptions
2023-01-09 15:38:52,725:INFO:Copying training dataset
2023-01-09 15:38:52,726:INFO:Checking base model
2023-01-09 15:38:52,727:INFO:Base model : Light Gradient Boosting Machine
2023-01-09 15:38:52,728:INFO:Declaring metric variables
2023-01-09 15:38:52,730:INFO:Defining Hyperparameters
2023-01-09 15:38:52,804:INFO:Tuning with n_jobs=-1
2023-01-09 15:38:52,804:INFO:Initializing RandomizedSearchCV
2023-01-09 15:38:53,301:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 66, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 0.7}
2023-01-09 15:38:53,301:INFO:Hyperparameter search completed
2023-01-09 15:38:53,301:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:53,301:INFO:Initializing create_model()
2023-01-09 15:38:53,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013FE146B370>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0005, 'num_leaves': 90, 'n_estimators': 90, 'min_split_gain': 0.4, 'min_child_samples': 66, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7})
2023-01-09 15:38:53,301:INFO:Checking exceptions
2023-01-09 15:38:53,301:INFO:Importing libraries
2023-01-09 15:38:53,301:INFO:Copying training dataset
2023-01-09 15:38:53,302:INFO:Defining folds
2023-01-09 15:38:53,302:INFO:Declaring metric variables
2023-01-09 15:38:53,303:INFO:Importing untrained model
2023-01-09 15:38:53,305:INFO:Declaring custom model
2023-01-09 15:38:53,306:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:38:53,309:INFO:Starting cross validation
2023-01-09 15:38:53,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:53,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,381:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,382:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,384:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,390:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,390:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,390:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,390:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,391:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,391:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,391:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,391:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,393:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,395:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,395:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,396:INFO:Calculating mean and std
2023-01-09 15:38:53,396:INFO:Creating metrics dataframe
2023-01-09 15:38:53,399:INFO:Finalizing model
2023-01-09 15:38:53,461:INFO:Uploading results into container
2023-01-09 15:38:53,461:INFO:Uploading model into container now
2023-01-09 15:38:53,461:INFO:_master_model_container: 16
2023-01-09 15:38:53,461:INFO:_display_container: 4
2023-01-09 15:38:53,462:INFO:LGBMClassifier(bagging_fraction=0.7, bagging_freq=6, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=66, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=90, n_jobs=-1, num_leaves=90, objective=None,
               random_state=123, reg_alpha=0.0005, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-01-09 15:38:53,462:INFO:create_model() successfully completed......................................
2023-01-09 15:38:53,541:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:53,541:INFO:choose_better activated
2023-01-09 15:38:53,543:INFO:SubProcess create_model() called ==================================
2023-01-09 15:38:53,543:INFO:Initializing create_model()
2023-01-09 15:38:53,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 15:38:53,544:INFO:Checking exceptions
2023-01-09 15:38:53,545:INFO:Importing libraries
2023-01-09 15:38:53,545:INFO:Copying training dataset
2023-01-09 15:38:53,545:INFO:Defining folds
2023-01-09 15:38:53,545:INFO:Declaring metric variables
2023-01-09 15:38:53,546:INFO:Importing untrained model
2023-01-09 15:38:53,546:INFO:Declaring custom model
2023-01-09 15:38:53,546:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:38:53,546:INFO:Starting cross validation
2023-01-09 15:38:53,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 15:38:53,693:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,693:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,694:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,695:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,695:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,696:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,696:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,696:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,696:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,697:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,697:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,698:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,704:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,704:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,704:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,708:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,708:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,709:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,716:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,717:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,717:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,717:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,718:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,718:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,725:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,725:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,725:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,755:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,755:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,756:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:38:53,757:INFO:Calculating mean and std
2023-01-09 15:38:53,757:INFO:Creating metrics dataframe
2023-01-09 15:38:53,758:INFO:Finalizing model
2023-01-09 15:38:53,985:INFO:Uploading results into container
2023-01-09 15:38:53,986:INFO:Uploading model into container now
2023-01-09 15:38:53,986:INFO:_master_model_container: 17
2023-01-09 15:38:53,986:INFO:_display_container: 5
2023-01-09 15:38:53,986:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:53,986:INFO:create_model() successfully completed......................................
2023-01-09 15:38:54,063:INFO:SubProcess create_model() end ==================================
2023-01-09 15:38:54,063:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.9493
2023-01-09 15:38:54,063:INFO:LGBMClassifier(bagging_fraction=0.7, bagging_freq=6, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=66, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=90, n_jobs=-1, num_leaves=90, objective=None,
               random_state=123, reg_alpha=0.0005, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) result for Accuracy is 0.9439
2023-01-09 15:38:54,063:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-09 15:38:54,063:INFO:choose_better completed
2023-01-09 15:38:54,065:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-01-09 15:38:54,071:INFO:_master_model_container: 17
2023-01-09 15:38:54,071:INFO:_display_container: 4
2023-01-09 15:38:54,071:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:38:54,071:INFO:tune_model() successfully completed......................................
2023-01-09 15:39:03,657:INFO:Initializing plot_model()
2023-01-09 15:39:03,657:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, system=True)
2023-01-09 15:39:03,657:INFO:Checking exceptions
2023-01-09 15:39:03,659:INFO:Preloading libraries
2023-01-09 15:39:03,668:INFO:Copying training dataset
2023-01-09 15:39:03,668:INFO:Plot type: confusion_matrix
2023-01-09 15:39:03,696:INFO:Fitting Model
2023-01-09 15:39:03,696:INFO:Scoring test/hold-out set
2023-01-09 15:39:03,770:INFO:Visual Rendered Successfully
2023-01-09 15:39:03,867:INFO:plot_model() successfully completed......................................
2023-01-09 15:39:10,237:INFO:Initializing plot_model()
2023-01-09 15:39:10,237:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, system=True)
2023-01-09 15:39:10,237:INFO:Checking exceptions
2023-01-09 15:39:10,239:INFO:Preloading libraries
2023-01-09 15:39:10,249:INFO:Copying training dataset
2023-01-09 15:39:10,249:INFO:Plot type: feature
2023-01-09 15:39:10,250:WARNING:No coef_ found. Trying feature_importances_
2023-01-09 15:39:10,345:INFO:Visual Rendered Successfully
2023-01-09 15:39:10,415:INFO:plot_model() successfully completed......................................
2023-01-09 15:39:14,491:INFO:Initializing evaluate_model()
2023-01-09 15:39:14,492:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-09 15:39:14,497:INFO:Initializing plot_model()
2023-01-09 15:39:14,497:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, system=True)
2023-01-09 15:39:14,497:INFO:Checking exceptions
2023-01-09 15:39:14,498:INFO:Preloading libraries
2023-01-09 15:39:14,510:INFO:Copying training dataset
2023-01-09 15:39:14,510:INFO:Plot type: pipeline
2023-01-09 15:39:14,588:INFO:Visual Rendered Successfully
2023-01-09 15:39:14,659:INFO:plot_model() successfully completed......................................
2023-01-09 15:39:18,925:INFO:Initializing predict_model()
2023-01-09 15:39:18,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FDCAE8820>)
2023-01-09 15:39:18,925:INFO:Checking exceptions
2023-01-09 15:39:18,925:INFO:Preloading libraries
2023-01-09 15:39:18,941:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:39:18,942:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:39:18,942:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:39:18,942:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:39:18,943:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:39:18,943:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 15:39:46,628:INFO:Initializing finalize_model()
2023-01-09 15:39:46,628:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-01-09 15:39:46,628:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 15:39:46,629:INFO:Initializing create_model()
2023-01-09 15:39:46,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-01-09 15:39:46,629:INFO:Checking exceptions
2023-01-09 15:39:46,630:INFO:Importing libraries
2023-01-09 15:39:46,630:INFO:Copying training dataset
2023-01-09 15:39:46,631:INFO:Defining folds
2023-01-09 15:39:46,631:INFO:Declaring metric variables
2023-01-09 15:39:46,631:INFO:Importing untrained model
2023-01-09 15:39:46,631:INFO:Declaring custom model
2023-01-09 15:39:46,631:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 15:39:46,631:INFO:Cross validation set to False
2023-01-09 15:39:46,631:INFO:Fitting Model
2023-01-09 15:39:46,843:INFO:Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-01-09 15:39:46,843:INFO:create_model() successfully completed......................................
2023-01-09 15:39:46,918:INFO:_master_model_container: 17
2023-01-09 15:39:46,919:INFO:_display_container: 5
2023-01-09 15:39:46,922:INFO:Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-01-09 15:39:46,922:INFO:finalize_model() successfully completed......................................
2023-01-09 15:40:00,386:INFO:Initializing predict_model()
2023-01-09 15:40:00,387:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FF1A77040>)
2023-01-09 15:40:00,387:INFO:Checking exceptions
2023-01-09 15:40:00,387:INFO:Preloading libraries
2023-01-09 15:40:00,401:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:00,402:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:00,402:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:00,402:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:00,403:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:00,403:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 15:40:11,795:INFO:Initializing predict_model()
2023-01-09 15:40:11,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FDED82F70>)
2023-01-09 15:40:11,797:INFO:Checking exceptions
2023-01-09 15:40:11,797:INFO:Preloading libraries
2023-01-09 15:40:11,812:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:11,812:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:11,812:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:11,812:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:11,813:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:11,813:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 15:40:51,369:INFO:Initializing predict_model()
2023-01-09 15:40:51,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FDCB6E040>)
2023-01-09 15:40:51,369:INFO:Checking exceptions
2023-01-09 15:40:51,369:INFO:Preloading libraries
2023-01-09 15:40:51,370:INFO:Set up data.
2023-01-09 15:40:51,373:INFO:Set up index.
2023-01-09 15:40:51,417:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:51,418:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:51,418:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:51,419:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:40:51,419:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:40:51,419:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 15:41:35,096:INFO:Initializing predict_model()
2023-01-09 15:41:35,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FDE415E50>)
2023-01-09 15:41:35,096:INFO:Checking exceptions
2023-01-09 15:41:35,096:INFO:Preloading libraries
2023-01-09 15:41:35,097:INFO:Set up data.
2023-01-09 15:41:35,100:INFO:Set up index.
2023-01-09 15:41:35,118:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:41:35,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:41:35,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:41:35,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:41:35,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:41:35,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 15:42:05,623:INFO:Initializing predict_model()
2023-01-09 15:42:05,623:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013FDE8AB7C0>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000013FDCB6E040>)
2023-01-09 15:42:05,623:INFO:Checking exceptions
2023-01-09 15:42:05,623:INFO:Preloading libraries
2023-01-09 15:42:05,624:INFO:Set up data.
2023-01-09 15:42:05,627:INFO:Set up index.
2023-01-09 15:42:05,636:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:42:05,636:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:42:05,636:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:42:05,637:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 15:42:05,637:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 15:42:05,637:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 16:53:50,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 16:53:50,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 16:53:50,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 16:53:50,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-01-09 16:53:50,603:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-01-09 16:53:53,187:INFO:PyCaret ClassificationExperiment
2023-01-09 16:53:53,187:INFO:Logging name: clf-default-name
2023-01-09 16:53:53,187:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 16:53:53,187:INFO:version 3.0.0.rc7
2023-01-09 16:53:53,187:INFO:Initializing setup()
2023-01-09 16:53:53,187:INFO:self.USI: b58e
2023-01-09 16:53:53,187:INFO:self._variable_keys: {'idx', 'html_param', 'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'fold_generator', 'X', 'seed', '_ml_usecase', 'y_train', 'data', 'fold_groups_param', 'exp_id', 'y_test', 'X_test', 'is_multiclass', 'memory', 'pipeline', 'target_param', 'fix_imbalance', '_available_plots', 'USI', 'X_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y', 'n_jobs_param'}
2023-01-09 16:53:53,187:INFO:Checking environment
2023-01-09 16:53:53,187:INFO:python_version: 3.8.2
2023-01-09 16:53:53,187:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2023-01-09 16:53:53,187:INFO:machine: AMD64
2023-01-09 16:53:53,187:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 16:53:53,194:INFO:Memory: svmem(total=34190110720, available=14954713088, percent=56.3, used=19235397632, free=14954713088)
2023-01-09 16:53:53,194:INFO:Physical Core: 16
2023-01-09 16:53:53,194:INFO:Logical Core: 24
2023-01-09 16:53:53,194:INFO:Checking libraries
2023-01-09 16:53:53,194:INFO:System:
2023-01-09 16:53:53,194:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2023-01-09 16:53:53,194:INFO:executable: c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\python.exe
2023-01-09 16:53:53,194:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 16:53:53,194:INFO:PyCaret required dependencies:
2023-01-09 16:53:53,194:INFO:                 pip: 22.3.1
2023-01-09 16:53:53,194:INFO:          setuptools: 41.2.0
2023-01-09 16:53:53,194:INFO:             pycaret: 3.0.0rc7
2023-01-09 16:53:53,194:INFO:             IPython: 8.8.0
2023-01-09 16:53:53,194:INFO:          ipywidgets: 8.0.4
2023-01-09 16:53:53,194:INFO:                tqdm: 4.64.1
2023-01-09 16:53:53,194:INFO:               numpy: 1.23.2
2023-01-09 16:53:53,194:INFO:              pandas: 1.4.4
2023-01-09 16:53:53,194:INFO:              jinja2: 3.1.2
2023-01-09 16:53:53,194:INFO:               scipy: 1.9.1
2023-01-09 16:53:53,194:INFO:              joblib: 1.2.0
2023-01-09 16:53:53,194:INFO:             sklearn: 1.1.2
2023-01-09 16:53:53,194:INFO:                pyod: 1.0.7
2023-01-09 16:53:53,194:INFO:            imblearn: 0.10.1
2023-01-09 16:53:53,194:INFO:   category_encoders: 2.5.1.post0
2023-01-09 16:53:53,194:INFO:            lightgbm: 3.3.4
2023-01-09 16:53:53,195:INFO:               numba: 0.56.4
2023-01-09 16:53:53,195:INFO:            requests: 2.28.1
2023-01-09 16:53:53,195:INFO:          matplotlib: 3.6.2
2023-01-09 16:53:53,195:INFO:          scikitplot: 0.3.7
2023-01-09 16:53:53,195:INFO:         yellowbrick: 1.5
2023-01-09 16:53:53,195:INFO:              plotly: 5.11.0
2023-01-09 16:53:53,195:INFO:             kaleido: 0.2.1
2023-01-09 16:53:53,195:INFO:         statsmodels: 0.13.5
2023-01-09 16:53:53,195:INFO:              sktime: 0.15.0
2023-01-09 16:53:53,195:INFO:               tbats: 1.1.2
2023-01-09 16:53:53,195:INFO:            pmdarima: 2.0.2
2023-01-09 16:53:53,195:INFO:              psutil: 5.9.4
2023-01-09 16:53:53,195:INFO:PyCaret optional dependencies:
2023-01-09 16:53:53,200:INFO:                shap: Not installed
2023-01-09 16:53:53,200:INFO:           interpret: Not installed
2023-01-09 16:53:53,200:INFO:                umap: Not installed
2023-01-09 16:53:53,200:INFO:    pandas_profiling: 3.6.2
2023-01-09 16:53:53,200:INFO:  explainerdashboard: Not installed
2023-01-09 16:53:53,200:INFO:             autoviz: Not installed
2023-01-09 16:53:53,200:INFO:           fairlearn: Not installed
2023-01-09 16:53:53,200:INFO:             xgboost: Not installed
2023-01-09 16:53:53,200:INFO:            catboost: Not installed
2023-01-09 16:53:53,200:INFO:              kmodes: Not installed
2023-01-09 16:53:53,200:INFO:             mlxtend: Not installed
2023-01-09 16:53:53,200:INFO:       statsforecast: Not installed
2023-01-09 16:53:53,200:INFO:        tune_sklearn: Not installed
2023-01-09 16:53:53,200:INFO:                 ray: Not installed
2023-01-09 16:53:53,200:INFO:            hyperopt: Not installed
2023-01-09 16:53:53,200:INFO:              optuna: Not installed
2023-01-09 16:53:53,200:INFO:               skopt: Not installed
2023-01-09 16:53:53,200:INFO:              mlflow: Not installed
2023-01-09 16:53:53,200:INFO:              gradio: Not installed
2023-01-09 16:53:53,200:INFO:             fastapi: Not installed
2023-01-09 16:53:53,200:INFO:             uvicorn: Not installed
2023-01-09 16:53:53,200:INFO:              m2cgen: Not installed
2023-01-09 16:53:53,200:INFO:           evidently: Not installed
2023-01-09 16:53:53,200:INFO:                nltk: Not installed
2023-01-09 16:53:53,200:INFO:            pyLDAvis: Not installed
2023-01-09 16:53:53,200:INFO:              gensim: Not installed
2023-01-09 16:53:53,200:INFO:               spacy: Not installed
2023-01-09 16:53:53,200:INFO:           wordcloud: Not installed
2023-01-09 16:53:53,200:INFO:            textblob: Not installed
2023-01-09 16:53:53,200:INFO:               fugue: Not installed
2023-01-09 16:53:53,200:INFO:           streamlit: Not installed
2023-01-09 16:53:53,200:INFO:             prophet: Not installed
2023-01-09 16:53:53,200:INFO:None
2023-01-09 16:53:53,200:INFO:Set up data.
2023-01-09 16:53:53,203:INFO:Set up train/test split.
2023-01-09 16:53:53,205:INFO:Set up index.
2023-01-09 16:53:53,205:INFO:Set up folding strategy.
2023-01-09 16:53:53,205:INFO:Assigning column types.
2023-01-09 16:53:53,206:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 16:53:53,238:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,294:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 16:53:53,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:53,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,361:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 16:53:53,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,427:INFO:Preparing preprocessing pipeline...
2023-01-09 16:53:53,428:INFO:Set up column name cleaning.
2023-01-09 16:53:53,428:INFO:Set up label encoding.
2023-01-09 16:53:53,428:INFO:Set up simple imputation.
2023-01-09 16:53:53,467:INFO:Finished creating preprocessing pipeline.
2023-01-09 16:53:53,469:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 16:53:53,469:INFO:Creating final display dataframe.
2023-01-09 16:53:53,630:INFO:Setup _display_container:                     Description                   Value
0                    Session id                    2226
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (1902, 22)
5        Transformed data shape              (1902, 22)
6   Transformed train set shape              (1331, 22)
7    Transformed test set shape               (571, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    b58e
2023-01-09 16:53:53,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:53,699:INFO:setup() successfully completed in 0.51s...............
2023-01-09 16:53:55,905:INFO:PyCaret ClassificationExperiment
2023-01-09 16:53:55,905:INFO:Logging name: clf-default-name
2023-01-09 16:53:55,905:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-01-09 16:53:55,905:INFO:version 3.0.0.rc7
2023-01-09 16:53:55,905:INFO:Initializing setup()
2023-01-09 16:53:55,905:INFO:self.USI: 63da
2023-01-09 16:53:55,905:INFO:self._variable_keys: {'idx', 'html_param', 'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'fold_generator', 'X', 'seed', '_ml_usecase', 'y_train', 'data', 'fold_groups_param', 'exp_id', 'y_test', 'X_test', 'is_multiclass', 'memory', 'pipeline', 'target_param', 'fix_imbalance', '_available_plots', 'USI', 'X_train', 'exp_name_log', 'logging_param', 'fold_shuffle_param', 'y', 'n_jobs_param'}
2023-01-09 16:53:55,905:INFO:Checking environment
2023-01-09 16:53:55,905:INFO:python_version: 3.8.2
2023-01-09 16:53:55,905:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2023-01-09 16:53:55,905:INFO:machine: AMD64
2023-01-09 16:53:55,906:INFO:platform: Windows-10-10.0.22621-SP0
2023-01-09 16:53:55,912:INFO:Memory: svmem(total=34190110720, available=14942322688, percent=56.3, used=19247788032, free=14942322688)
2023-01-09 16:53:55,912:INFO:Physical Core: 16
2023-01-09 16:53:55,912:INFO:Logical Core: 24
2023-01-09 16:53:55,912:INFO:Checking libraries
2023-01-09 16:53:55,912:INFO:System:
2023-01-09 16:53:55,912:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2023-01-09 16:53:55,912:INFO:executable: c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\python.exe
2023-01-09 16:53:55,912:INFO:   machine: Windows-10-10.0.22621-SP0
2023-01-09 16:53:55,912:INFO:PyCaret required dependencies:
2023-01-09 16:53:55,912:INFO:                 pip: 22.3.1
2023-01-09 16:53:55,912:INFO:          setuptools: 41.2.0
2023-01-09 16:53:55,912:INFO:             pycaret: 3.0.0rc7
2023-01-09 16:53:55,912:INFO:             IPython: 8.8.0
2023-01-09 16:53:55,912:INFO:          ipywidgets: 8.0.4
2023-01-09 16:53:55,912:INFO:                tqdm: 4.64.1
2023-01-09 16:53:55,912:INFO:               numpy: 1.23.2
2023-01-09 16:53:55,912:INFO:              pandas: 1.4.4
2023-01-09 16:53:55,912:INFO:              jinja2: 3.1.2
2023-01-09 16:53:55,912:INFO:               scipy: 1.9.1
2023-01-09 16:53:55,912:INFO:              joblib: 1.2.0
2023-01-09 16:53:55,912:INFO:             sklearn: 1.1.2
2023-01-09 16:53:55,912:INFO:                pyod: 1.0.7
2023-01-09 16:53:55,912:INFO:            imblearn: 0.10.1
2023-01-09 16:53:55,912:INFO:   category_encoders: 2.5.1.post0
2023-01-09 16:53:55,912:INFO:            lightgbm: 3.3.4
2023-01-09 16:53:55,912:INFO:               numba: 0.56.4
2023-01-09 16:53:55,912:INFO:            requests: 2.28.1
2023-01-09 16:53:55,912:INFO:          matplotlib: 3.6.2
2023-01-09 16:53:55,912:INFO:          scikitplot: 0.3.7
2023-01-09 16:53:55,912:INFO:         yellowbrick: 1.5
2023-01-09 16:53:55,912:INFO:              plotly: 5.11.0
2023-01-09 16:53:55,912:INFO:             kaleido: 0.2.1
2023-01-09 16:53:55,912:INFO:         statsmodels: 0.13.5
2023-01-09 16:53:55,912:INFO:              sktime: 0.15.0
2023-01-09 16:53:55,912:INFO:               tbats: 1.1.2
2023-01-09 16:53:55,912:INFO:            pmdarima: 2.0.2
2023-01-09 16:53:55,913:INFO:              psutil: 5.9.4
2023-01-09 16:53:55,913:INFO:PyCaret optional dependencies:
2023-01-09 16:53:55,913:INFO:                shap: Not installed
2023-01-09 16:53:55,913:INFO:           interpret: Not installed
2023-01-09 16:53:55,913:INFO:                umap: Not installed
2023-01-09 16:53:55,913:INFO:    pandas_profiling: 3.6.2
2023-01-09 16:53:55,913:INFO:  explainerdashboard: Not installed
2023-01-09 16:53:55,913:INFO:             autoviz: Not installed
2023-01-09 16:53:55,913:INFO:           fairlearn: Not installed
2023-01-09 16:53:55,913:INFO:             xgboost: Not installed
2023-01-09 16:53:55,913:INFO:            catboost: Not installed
2023-01-09 16:53:55,913:INFO:              kmodes: Not installed
2023-01-09 16:53:55,913:INFO:             mlxtend: Not installed
2023-01-09 16:53:55,913:INFO:       statsforecast: Not installed
2023-01-09 16:53:55,913:INFO:        tune_sklearn: Not installed
2023-01-09 16:53:55,913:INFO:                 ray: Not installed
2023-01-09 16:53:55,913:INFO:            hyperopt: Not installed
2023-01-09 16:53:55,913:INFO:              optuna: Not installed
2023-01-09 16:53:55,913:INFO:               skopt: Not installed
2023-01-09 16:53:55,913:INFO:              mlflow: Not installed
2023-01-09 16:53:55,913:INFO:              gradio: Not installed
2023-01-09 16:53:55,913:INFO:             fastapi: Not installed
2023-01-09 16:53:55,913:INFO:             uvicorn: Not installed
2023-01-09 16:53:55,913:INFO:              m2cgen: Not installed
2023-01-09 16:53:55,913:INFO:           evidently: Not installed
2023-01-09 16:53:55,913:INFO:                nltk: Not installed
2023-01-09 16:53:55,913:INFO:            pyLDAvis: Not installed
2023-01-09 16:53:55,913:INFO:              gensim: Not installed
2023-01-09 16:53:55,913:INFO:               spacy: Not installed
2023-01-09 16:53:55,913:INFO:           wordcloud: Not installed
2023-01-09 16:53:55,913:INFO:            textblob: Not installed
2023-01-09 16:53:55,913:INFO:               fugue: Not installed
2023-01-09 16:53:55,913:INFO:           streamlit: Not installed
2023-01-09 16:53:55,913:INFO:             prophet: Not installed
2023-01-09 16:53:55,913:INFO:None
2023-01-09 16:53:55,913:INFO:Set up data.
2023-01-09 16:53:55,917:INFO:Set up train/test split.
2023-01-09 16:53:55,918:INFO:Set up index.
2023-01-09 16:53:55,918:INFO:Set up folding strategy.
2023-01-09 16:53:55,918:INFO:Assigning column types.
2023-01-09 16:53:55,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-01-09 16:53:55,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 16:53:55,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:55,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:55,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:55,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-01-09 16:53:55,974:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:55,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:55,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:55,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-01-09 16:53:56,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:56,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-01-09 16:53:56,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,052:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-01-09 16:53:56,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,118:INFO:Preparing preprocessing pipeline...
2023-01-09 16:53:56,118:INFO:Set up column name cleaning.
2023-01-09 16:53:56,119:INFO:Set up label encoding.
2023-01-09 16:53:56,119:INFO:Set up simple imputation.
2023-01-09 16:53:56,125:INFO:Finished creating preprocessing pipeline.
2023-01-09 16:53:56,127:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-01-09 16:53:56,127:INFO:Creating final display dataframe.
2023-01-09 16:53:56,173:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (2113, 22)
5        Transformed data shape              (2113, 22)
6   Transformed train set shape              (1479, 22)
7    Transformed test set shape               (634, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    63da
2023-01-09 16:53:56,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:53:56,244:INFO:setup() successfully completed in 0.34s...............
2023-01-09 16:53:59,498:INFO:Initializing compare_models()
2023-01-09 16:53:59,498:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-01-09 16:53:59,498:INFO:Checking exceptions
2023-01-09 16:53:59,500:INFO:Preparing display monitor
2023-01-09 16:53:59,512:INFO:Initializing Logistic Regression
2023-01-09 16:53:59,512:INFO:Total runtime is 0.0 minutes
2023-01-09 16:53:59,513:INFO:SubProcess create_model() called ==================================
2023-01-09 16:53:59,513:INFO:Initializing create_model()
2023-01-09 16:53:59,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:53:59,514:INFO:Checking exceptions
2023-01-09 16:53:59,514:INFO:Importing libraries
2023-01-09 16:53:59,514:INFO:Copying training dataset
2023-01-09 16:53:59,515:INFO:Defining folds
2023-01-09 16:53:59,515:INFO:Declaring metric variables
2023-01-09 16:53:59,516:INFO:Importing untrained model
2023-01-09 16:53:59,518:INFO:Logistic Regression Imported successfully
2023-01-09 16:53:59,521:INFO:Starting cross validation
2023-01-09 16:53:59,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:00,853:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,868:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,869:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,869:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,870:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,878:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,878:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,879:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,895:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,905:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,906:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,911:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,911:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,912:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,912:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,914:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,915:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,918:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,918:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,918:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,919:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,920:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,921:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,921:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,923:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,932:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-01-09 16:54:00,934:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,935:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,935:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,946:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,947:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,948:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,951:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,952:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,952:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,953:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,954:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,954:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:00,956:INFO:Calculating mean and std
2023-01-09 16:54:00,958:INFO:Creating metrics dataframe
2023-01-09 16:54:00,961:INFO:Uploading results into container
2023-01-09 16:54:00,962:INFO:Uploading model into container now
2023-01-09 16:54:00,962:INFO:_master_model_container: 1
2023-01-09 16:54:00,962:INFO:_display_container: 2
2023-01-09 16:54:00,963:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-01-09 16:54:00,963:INFO:create_model() successfully completed......................................
2023-01-09 16:54:01,064:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:01,064:INFO:Creating metrics dataframe
2023-01-09 16:54:01,068:INFO:Initializing K Neighbors Classifier
2023-01-09 16:54:01,068:INFO:Total runtime is 0.02593439817428589 minutes
2023-01-09 16:54:01,070:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:01,070:INFO:Initializing create_model()
2023-01-09 16:54:01,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:01,070:INFO:Checking exceptions
2023-01-09 16:54:01,070:INFO:Importing libraries
2023-01-09 16:54:01,070:INFO:Copying training dataset
2023-01-09 16:54:01,071:INFO:Defining folds
2023-01-09 16:54:01,071:INFO:Declaring metric variables
2023-01-09 16:54:01,073:INFO:Importing untrained model
2023-01-09 16:54:01,075:INFO:K Neighbors Classifier Imported successfully
2023-01-09 16:54:01,079:INFO:Starting cross validation
2023-01-09 16:54:01,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:02,010:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,011:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,011:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,012:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,013:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,013:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,039:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,040:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,041:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,041:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,042:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,042:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,045:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,046:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,046:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,046:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,047:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,048:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,052:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,060:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,061:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,061:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,062:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,071:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,072:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,072:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,073:INFO:Calculating mean and std
2023-01-09 16:54:02,074:INFO:Creating metrics dataframe
2023-01-09 16:54:02,076:INFO:Uploading results into container
2023-01-09 16:54:02,076:INFO:Uploading model into container now
2023-01-09 16:54:02,076:INFO:_master_model_container: 2
2023-01-09 16:54:02,076:INFO:_display_container: 2
2023-01-09 16:54:02,077:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-01-09 16:54:02,077:INFO:create_model() successfully completed......................................
2023-01-09 16:54:02,163:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:02,163:INFO:Creating metrics dataframe
2023-01-09 16:54:02,169:INFO:Initializing Naive Bayes
2023-01-09 16:54:02,169:INFO:Total runtime is 0.04428387880325317 minutes
2023-01-09 16:54:02,170:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:02,171:INFO:Initializing create_model()
2023-01-09 16:54:02,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:02,171:INFO:Checking exceptions
2023-01-09 16:54:02,171:INFO:Importing libraries
2023-01-09 16:54:02,171:INFO:Copying training dataset
2023-01-09 16:54:02,172:INFO:Defining folds
2023-01-09 16:54:02,172:INFO:Declaring metric variables
2023-01-09 16:54:02,173:INFO:Importing untrained model
2023-01-09 16:54:02,174:INFO:Naive Bayes Imported successfully
2023-01-09 16:54:02,178:INFO:Starting cross validation
2023-01-09 16:54:02,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:02,209:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,210:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,210:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,214:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,215:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,215:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,216:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,217:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,217:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,217:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,217:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,218:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,218:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,218:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,218:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,220:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,221:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,221:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,989:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,989:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,990:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,991:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,991:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:02,992:INFO:Calculating mean and std
2023-01-09 16:54:02,992:INFO:Creating metrics dataframe
2023-01-09 16:54:02,995:INFO:Uploading results into container
2023-01-09 16:54:02,996:INFO:Uploading model into container now
2023-01-09 16:54:02,996:INFO:_master_model_container: 3
2023-01-09 16:54:02,996:INFO:_display_container: 2
2023-01-09 16:54:02,996:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-01-09 16:54:02,996:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,067:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,068:INFO:Creating metrics dataframe
2023-01-09 16:54:03,073:INFO:Initializing Decision Tree Classifier
2023-01-09 16:54:03,073:INFO:Total runtime is 0.059358811378479 minutes
2023-01-09 16:54:03,074:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,074:INFO:Initializing create_model()
2023-01-09 16:54:03,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,075:INFO:Checking exceptions
2023-01-09 16:54:03,075:INFO:Importing libraries
2023-01-09 16:54:03,075:INFO:Copying training dataset
2023-01-09 16:54:03,076:INFO:Defining folds
2023-01-09 16:54:03,076:INFO:Declaring metric variables
2023-01-09 16:54:03,077:INFO:Importing untrained model
2023-01-09 16:54:03,079:INFO:Decision Tree Classifier Imported successfully
2023-01-09 16:54:03,082:INFO:Starting cross validation
2023-01-09 16:54:03,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,112:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,112:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,113:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,115:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,115:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,116:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,118:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,119:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,120:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,121:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,122:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,123:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,123:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,123:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,123:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,125:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,125:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,126:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,127:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,128:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,129:INFO:Calculating mean and std
2023-01-09 16:54:03,130:INFO:Creating metrics dataframe
2023-01-09 16:54:03,131:INFO:Uploading results into container
2023-01-09 16:54:03,132:INFO:Uploading model into container now
2023-01-09 16:54:03,132:INFO:_master_model_container: 4
2023-01-09 16:54:03,132:INFO:_display_container: 2
2023-01-09 16:54:03,132:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-01-09 16:54:03,132:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,206:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,206:INFO:Creating metrics dataframe
2023-01-09 16:54:03,211:INFO:Initializing SVM - Linear Kernel
2023-01-09 16:54:03,211:INFO:Total runtime is 0.06166109641393026 minutes
2023-01-09 16:54:03,212:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,212:INFO:Initializing create_model()
2023-01-09 16:54:03,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,213:INFO:Checking exceptions
2023-01-09 16:54:03,213:INFO:Importing libraries
2023-01-09 16:54:03,213:INFO:Copying training dataset
2023-01-09 16:54:03,214:INFO:Defining folds
2023-01-09 16:54:03,214:INFO:Declaring metric variables
2023-01-09 16:54:03,215:INFO:Importing untrained model
2023-01-09 16:54:03,216:INFO:SVM - Linear Kernel Imported successfully
2023-01-09 16:54:03,219:INFO:Starting cross validation
2023-01-09 16:54:03,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,252:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,252:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,253:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,255:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,256:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,256:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,257:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,258:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,259:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,259:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,260:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,260:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,262:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,265:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,265:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,265:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,266:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,266:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,266:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:03,266:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,269:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,269:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,270:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,270:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,270:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,271:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:03,271:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,272:INFO:Calculating mean and std
2023-01-09 16:54:03,272:INFO:Creating metrics dataframe
2023-01-09 16:54:03,274:INFO:Uploading results into container
2023-01-09 16:54:03,274:INFO:Uploading model into container now
2023-01-09 16:54:03,274:INFO:_master_model_container: 5
2023-01-09 16:54:03,274:INFO:_display_container: 2
2023-01-09 16:54:03,274:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-01-09 16:54:03,276:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,342:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,342:INFO:Creating metrics dataframe
2023-01-09 16:54:03,347:INFO:Initializing Ridge Classifier
2023-01-09 16:54:03,347:INFO:Total runtime is 0.06391965548197429 minutes
2023-01-09 16:54:03,348:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,349:INFO:Initializing create_model()
2023-01-09 16:54:03,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,349:INFO:Checking exceptions
2023-01-09 16:54:03,349:INFO:Importing libraries
2023-01-09 16:54:03,349:INFO:Copying training dataset
2023-01-09 16:54:03,350:INFO:Defining folds
2023-01-09 16:54:03,350:INFO:Declaring metric variables
2023-01-09 16:54:03,351:INFO:Importing untrained model
2023-01-09 16:54:03,352:INFO:Ridge Classifier Imported successfully
2023-01-09 16:54:03,356:INFO:Starting cross validation
2023-01-09 16:54:03,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,378:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,378:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,379:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,379:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,380:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,381:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,381:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,381:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,382:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,383:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,385:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,386:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,387:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,387:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,388:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,389:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,392:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,393:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,393:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,393:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,393:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,394:INFO:Calculating mean and std
2023-01-09 16:54:03,395:INFO:Creating metrics dataframe
2023-01-09 16:54:03,397:INFO:Uploading results into container
2023-01-09 16:54:03,397:INFO:Uploading model into container now
2023-01-09 16:54:03,397:INFO:_master_model_container: 6
2023-01-09 16:54:03,397:INFO:_display_container: 2
2023-01-09 16:54:03,397:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=123, solver='auto', tol=0.001)
2023-01-09 16:54:03,397:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,466:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,466:INFO:Creating metrics dataframe
2023-01-09 16:54:03,470:INFO:Initializing Random Forest Classifier
2023-01-09 16:54:03,471:INFO:Total runtime is 0.06599363088607789 minutes
2023-01-09 16:54:03,473:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,473:INFO:Initializing create_model()
2023-01-09 16:54:03,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,473:INFO:Checking exceptions
2023-01-09 16:54:03,473:INFO:Importing libraries
2023-01-09 16:54:03,473:INFO:Copying training dataset
2023-01-09 16:54:03,474:INFO:Defining folds
2023-01-09 16:54:03,474:INFO:Declaring metric variables
2023-01-09 16:54:03,476:INFO:Importing untrained model
2023-01-09 16:54:03,478:INFO:Random Forest Classifier Imported successfully
2023-01-09 16:54:03,481:INFO:Starting cross validation
2023-01-09 16:54:03,482:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,647:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,647:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,647:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,648:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,648:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,649:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,651:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,651:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,652:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,653:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,654:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,654:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,654:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,655:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,656:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,656:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,657:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,657:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,657:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,661:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,661:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,663:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,664:INFO:Calculating mean and std
2023-01-09 16:54:03,664:INFO:Creating metrics dataframe
2023-01-09 16:54:03,666:INFO:Uploading results into container
2023-01-09 16:54:03,666:INFO:Uploading model into container now
2023-01-09 16:54:03,666:INFO:_master_model_container: 7
2023-01-09 16:54:03,666:INFO:_display_container: 2
2023-01-09 16:54:03,667:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-01-09 16:54:03,667:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,736:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,736:INFO:Creating metrics dataframe
2023-01-09 16:54:03,742:INFO:Initializing Quadratic Discriminant Analysis
2023-01-09 16:54:03,742:INFO:Total runtime is 0.07050019502639772 minutes
2023-01-09 16:54:03,743:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,743:INFO:Initializing create_model()
2023-01-09 16:54:03,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,743:INFO:Checking exceptions
2023-01-09 16:54:03,743:INFO:Importing libraries
2023-01-09 16:54:03,743:INFO:Copying training dataset
2023-01-09 16:54:03,744:INFO:Defining folds
2023-01-09 16:54:03,744:INFO:Declaring metric variables
2023-01-09 16:54:03,746:INFO:Importing untrained model
2023-01-09 16:54:03,747:INFO:Quadratic Discriminant Analysis Imported successfully
2023-01-09 16:54:03,750:INFO:Starting cross validation
2023-01-09 16:54:03,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,767:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,768:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,770:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,770:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,772:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,773:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,777:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,778:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,778:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,778:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,779:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,779:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,780:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,781:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,781:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,781:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,781:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-01-09 16:54:03,782:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,782:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,783:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,783:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,783:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,786:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,789:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,790:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,790:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,792:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,792:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,792:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,794:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,795:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,795:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,798:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,798:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,798:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,799:INFO:Calculating mean and std
2023-01-09 16:54:03,800:INFO:Creating metrics dataframe
2023-01-09 16:54:03,801:INFO:Uploading results into container
2023-01-09 16:54:03,801:INFO:Uploading model into container now
2023-01-09 16:54:03,803:INFO:_master_model_container: 8
2023-01-09 16:54:03,803:INFO:_display_container: 2
2023-01-09 16:54:03,803:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-01-09 16:54:03,803:INFO:create_model() successfully completed......................................
2023-01-09 16:54:03,869:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:03,869:INFO:Creating metrics dataframe
2023-01-09 16:54:03,874:INFO:Initializing Ada Boost Classifier
2023-01-09 16:54:03,874:INFO:Total runtime is 0.07271215120951335 minutes
2023-01-09 16:54:03,875:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:03,875:INFO:Initializing create_model()
2023-01-09 16:54:03,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:03,876:INFO:Checking exceptions
2023-01-09 16:54:03,876:INFO:Importing libraries
2023-01-09 16:54:03,876:INFO:Copying training dataset
2023-01-09 16:54:03,877:INFO:Defining folds
2023-01-09 16:54:03,877:INFO:Declaring metric variables
2023-01-09 16:54:03,878:INFO:Importing untrained model
2023-01-09 16:54:03,880:INFO:Ada Boost Classifier Imported successfully
2023-01-09 16:54:03,883:INFO:Starting cross validation
2023-01-09 16:54:03,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:03,973:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,974:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,974:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,979:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,979:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,980:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,980:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,981:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,981:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,981:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,981:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,981:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,982:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,982:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,982:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,992:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,992:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,992:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,992:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,992:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,993:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,998:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,998:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,998:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,998:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,998:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,999:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,999:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,999:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:03,999:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,000:INFO:Calculating mean and std
2023-01-09 16:54:04,001:INFO:Creating metrics dataframe
2023-01-09 16:54:04,002:INFO:Uploading results into container
2023-01-09 16:54:04,002:INFO:Uploading model into container now
2023-01-09 16:54:04,002:INFO:_master_model_container: 9
2023-01-09 16:54:04,002:INFO:_display_container: 2
2023-01-09 16:54:04,002:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-01-09 16:54:04,002:INFO:create_model() successfully completed......................................
2023-01-09 16:54:04,083:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:04,083:INFO:Creating metrics dataframe
2023-01-09 16:54:04,089:INFO:Initializing Gradient Boosting Classifier
2023-01-09 16:54:04,089:INFO:Total runtime is 0.07629413604736329 minutes
2023-01-09 16:54:04,091:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:04,091:INFO:Initializing create_model()
2023-01-09 16:54:04,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:04,091:INFO:Checking exceptions
2023-01-09 16:54:04,091:INFO:Importing libraries
2023-01-09 16:54:04,091:INFO:Copying training dataset
2023-01-09 16:54:04,093:INFO:Defining folds
2023-01-09 16:54:04,093:INFO:Declaring metric variables
2023-01-09 16:54:04,094:INFO:Importing untrained model
2023-01-09 16:54:04,096:INFO:Gradient Boosting Classifier Imported successfully
2023-01-09 16:54:04,099:INFO:Starting cross validation
2023-01-09 16:54:04,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:04,745:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,746:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,747:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,751:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,753:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,753:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,756:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,757:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,757:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,758:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,758:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,759:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,760:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,761:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,761:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,764:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,765:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,765:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,785:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,786:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,792:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,793:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,794:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,801:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,802:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,802:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,806:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,807:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,807:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,808:INFO:Calculating mean and std
2023-01-09 16:54:04,809:INFO:Creating metrics dataframe
2023-01-09 16:54:04,811:INFO:Uploading results into container
2023-01-09 16:54:04,811:INFO:Uploading model into container now
2023-01-09 16:54:04,811:INFO:_master_model_container: 10
2023-01-09 16:54:04,811:INFO:_display_container: 2
2023-01-09 16:54:04,811:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-01-09 16:54:04,812:INFO:create_model() successfully completed......................................
2023-01-09 16:54:04,877:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:04,877:INFO:Creating metrics dataframe
2023-01-09 16:54:04,883:INFO:Initializing Linear Discriminant Analysis
2023-01-09 16:54:04,883:INFO:Total runtime is 0.08951984246571859 minutes
2023-01-09 16:54:04,883:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:04,883:INFO:Initializing create_model()
2023-01-09 16:54:04,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:04,885:INFO:Checking exceptions
2023-01-09 16:54:04,885:INFO:Importing libraries
2023-01-09 16:54:04,885:INFO:Copying training dataset
2023-01-09 16:54:04,886:INFO:Defining folds
2023-01-09 16:54:04,886:INFO:Declaring metric variables
2023-01-09 16:54:04,887:INFO:Importing untrained model
2023-01-09 16:54:04,888:INFO:Linear Discriminant Analysis Imported successfully
2023-01-09 16:54:04,892:INFO:Starting cross validation
2023-01-09 16:54:04,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:04,921:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,921:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,921:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,922:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,922:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,922:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,922:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,923:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,924:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,928:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,929:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,929:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,930:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,930:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,931:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,932:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,933:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,934:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,934:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,936:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,936:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,936:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,936:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,936:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,937:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:04,938:INFO:Calculating mean and std
2023-01-09 16:54:04,939:INFO:Creating metrics dataframe
2023-01-09 16:54:04,940:INFO:Uploading results into container
2023-01-09 16:54:04,940:INFO:Uploading model into container now
2023-01-09 16:54:04,941:INFO:_master_model_container: 11
2023-01-09 16:54:04,941:INFO:_display_container: 2
2023-01-09 16:54:04,941:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-01-09 16:54:04,941:INFO:create_model() successfully completed......................................
2023-01-09 16:54:05,012:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:05,012:INFO:Creating metrics dataframe
2023-01-09 16:54:05,017:INFO:Initializing Extra Trees Classifier
2023-01-09 16:54:05,018:INFO:Total runtime is 0.09177840948104858 minutes
2023-01-09 16:54:05,019:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:05,019:INFO:Initializing create_model()
2023-01-09 16:54:05,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:05,020:INFO:Checking exceptions
2023-01-09 16:54:05,020:INFO:Importing libraries
2023-01-09 16:54:05,020:INFO:Copying training dataset
2023-01-09 16:54:05,021:INFO:Defining folds
2023-01-09 16:54:05,021:INFO:Declaring metric variables
2023-01-09 16:54:05,023:INFO:Importing untrained model
2023-01-09 16:54:05,024:INFO:Extra Trees Classifier Imported successfully
2023-01-09 16:54:05,027:INFO:Starting cross validation
2023-01-09 16:54:05,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:05,165:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,166:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,167:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,167:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,170:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,170:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,171:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,172:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,172:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,173:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,173:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,173:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,173:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,173:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,175:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,176:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,177:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,178:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,179:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,179:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,180:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,180:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,181:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,182:INFO:Calculating mean and std
2023-01-09 16:54:05,182:INFO:Creating metrics dataframe
2023-01-09 16:54:05,184:INFO:Uploading results into container
2023-01-09 16:54:05,184:INFO:Uploading model into container now
2023-01-09 16:54:05,184:INFO:_master_model_container: 12
2023-01-09 16:54:05,184:INFO:_display_container: 2
2023-01-09 16:54:05,185:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-01-09 16:54:05,185:INFO:create_model() successfully completed......................................
2023-01-09 16:54:05,251:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:05,251:INFO:Creating metrics dataframe
2023-01-09 16:54:05,257:INFO:Initializing Light Gradient Boosting Machine
2023-01-09 16:54:05,257:INFO:Total runtime is 0.09575821955998738 minutes
2023-01-09 16:54:05,259:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:05,259:INFO:Initializing create_model()
2023-01-09 16:54:05,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:05,259:INFO:Checking exceptions
2023-01-09 16:54:05,259:INFO:Importing libraries
2023-01-09 16:54:05,259:INFO:Copying training dataset
2023-01-09 16:54:05,260:INFO:Defining folds
2023-01-09 16:54:05,260:INFO:Declaring metric variables
2023-01-09 16:54:05,262:INFO:Importing untrained model
2023-01-09 16:54:05,264:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:05,267:INFO:Starting cross validation
2023-01-09 16:54:05,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:05,408:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,408:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,409:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,427:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,427:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,427:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,427:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,428:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,428:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,433:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,434:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,434:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,434:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,434:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,434:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,436:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,436:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,437:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,439:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,440:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,440:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,442:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,442:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,443:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,444:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,446:INFO:Calculating mean and std
2023-01-09 16:54:05,447:INFO:Creating metrics dataframe
2023-01-09 16:54:05,448:INFO:Uploading results into container
2023-01-09 16:54:05,449:INFO:Uploading model into container now
2023-01-09 16:54:05,449:INFO:_master_model_container: 13
2023-01-09 16:54:05,449:INFO:_display_container: 2
2023-01-09 16:54:05,449:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:05,449:INFO:create_model() successfully completed......................................
2023-01-09 16:54:05,522:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:05,522:INFO:Creating metrics dataframe
2023-01-09 16:54:05,528:INFO:Initializing Dummy Classifier
2023-01-09 16:54:05,528:INFO:Total runtime is 0.10027546882629394 minutes
2023-01-09 16:54:05,530:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:05,530:INFO:Initializing create_model()
2023-01-09 16:54:05,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B916DC880>, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:05,530:INFO:Checking exceptions
2023-01-09 16:54:05,530:INFO:Importing libraries
2023-01-09 16:54:05,530:INFO:Copying training dataset
2023-01-09 16:54:05,531:INFO:Defining folds
2023-01-09 16:54:05,531:INFO:Declaring metric variables
2023-01-09 16:54:05,532:INFO:Importing untrained model
2023-01-09 16:54:05,534:INFO:Dummy Classifier Imported successfully
2023-01-09 16:54:05,536:INFO:Starting cross validation
2023-01-09 16:54:05,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:05,563:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,563:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,563:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,564:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,566:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,566:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,566:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,567:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,567:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,567:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,567:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,567:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,568:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,568:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,569:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,569:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,570:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,570:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,570:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,570:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,572:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,572:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,572:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,573:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,575:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,575:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,575:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,575:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,576:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,577:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,577:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,577:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,577:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,577:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:05,580:INFO:Calculating mean and std
2023-01-09 16:54:05,580:INFO:Creating metrics dataframe
2023-01-09 16:54:05,581:INFO:Uploading results into container
2023-01-09 16:54:05,583:INFO:Uploading model into container now
2023-01-09 16:54:05,583:INFO:_master_model_container: 14
2023-01-09 16:54:05,583:INFO:_display_container: 2
2023-01-09 16:54:05,583:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-01-09 16:54:05,583:INFO:create_model() successfully completed......................................
2023-01-09 16:54:05,650:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:05,650:INFO:Creating metrics dataframe
2023-01-09 16:54:05,661:INFO:Initializing create_model()
2023-01-09 16:54:05,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:05,661:INFO:Checking exceptions
2023-01-09 16:54:05,662:INFO:Importing libraries
2023-01-09 16:54:05,662:INFO:Copying training dataset
2023-01-09 16:54:05,664:INFO:Defining folds
2023-01-09 16:54:05,664:INFO:Declaring metric variables
2023-01-09 16:54:05,664:INFO:Importing untrained model
2023-01-09 16:54:05,664:INFO:Declaring custom model
2023-01-09 16:54:05,664:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:05,665:INFO:Cross validation set to False
2023-01-09 16:54:05,665:INFO:Fitting Model
2023-01-09 16:54:05,917:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:05,917:INFO:create_model() successfully completed......................................
2023-01-09 16:54:06,021:INFO:_master_model_container: 14
2023-01-09 16:54:06,022:INFO:_display_container: 2
2023-01-09 16:54:06,022:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:06,022:INFO:compare_models() successfully completed......................................
2023-01-09 16:54:15,574:INFO:gpu_param set to False
2023-01-09 16:54:15,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:54:15,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:54:15,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:54:15,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-01-09 16:54:23,256:INFO:Initializing create_model()
2023-01-09 16:54:23,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:23,256:INFO:Checking exceptions
2023-01-09 16:54:23,264:INFO:Importing libraries
2023-01-09 16:54:23,264:INFO:Copying training dataset
2023-01-09 16:54:23,265:INFO:Defining folds
2023-01-09 16:54:23,265:INFO:Declaring metric variables
2023-01-09 16:54:23,267:INFO:Importing untrained model
2023-01-09 16:54:23,269:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:23,272:INFO:Starting cross validation
2023-01-09 16:54:23,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:23,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,426:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,427:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,428:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,428:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,432:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,433:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,433:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,444:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,444:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,445:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,447:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,448:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,448:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,451:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,451:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,451:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,452:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,452:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,453:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,458:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,459:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,459:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,487:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,488:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,489:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:23,490:INFO:Calculating mean and std
2023-01-09 16:54:23,490:INFO:Creating metrics dataframe
2023-01-09 16:54:23,492:INFO:Finalizing model
2023-01-09 16:54:23,730:INFO:Uploading results into container
2023-01-09 16:54:23,730:INFO:Uploading model into container now
2023-01-09 16:54:23,736:INFO:_master_model_container: 15
2023-01-09 16:54:23,736:INFO:_display_container: 3
2023-01-09 16:54:23,736:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:23,736:INFO:create_model() successfully completed......................................
2023-01-09 16:54:30,572:INFO:Initializing tune_model()
2023-01-09 16:54:30,572:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>)
2023-01-09 16:54:30,572:INFO:Checking exceptions
2023-01-09 16:54:30,582:INFO:Copying training dataset
2023-01-09 16:54:30,582:INFO:Checking base model
2023-01-09 16:54:30,582:INFO:Base model : Light Gradient Boosting Machine
2023-01-09 16:54:30,584:INFO:Declaring metric variables
2023-01-09 16:54:30,586:INFO:Defining Hyperparameters
2023-01-09 16:54:30,660:INFO:Tuning with n_jobs=-1
2023-01-09 16:54:30,660:INFO:Initializing RandomizedSearchCV
2023-01-09 16:54:31,161:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 66, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__feature_fraction': 0.5, 'actual_estimator__bagging_freq': 6, 'actual_estimator__bagging_fraction': 0.7}
2023-01-09 16:54:31,161:INFO:Hyperparameter search completed
2023-01-09 16:54:31,161:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:31,161:INFO:Initializing create_model()
2023-01-09 16:54:31,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B935425E0>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0005, 'num_leaves': 90, 'n_estimators': 90, 'min_split_gain': 0.4, 'min_child_samples': 66, 'learning_rate': 0.1, 'feature_fraction': 0.5, 'bagging_freq': 6, 'bagging_fraction': 0.7})
2023-01-09 16:54:31,161:INFO:Checking exceptions
2023-01-09 16:54:31,161:INFO:Importing libraries
2023-01-09 16:54:31,161:INFO:Copying training dataset
2023-01-09 16:54:31,162:INFO:Defining folds
2023-01-09 16:54:31,162:INFO:Declaring metric variables
2023-01-09 16:54:31,165:INFO:Importing untrained model
2023-01-09 16:54:31,165:INFO:Declaring custom model
2023-01-09 16:54:31,166:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:31,169:INFO:Starting cross validation
2023-01-09 16:54:31,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:31,237:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,238:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,238:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,238:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,239:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,239:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,239:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,239:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,240:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,240:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,240:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,242:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,242:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,242:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,247:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,247:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,248:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,248:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,248:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,249:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,257:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,257:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,257:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,258:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,258:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,258:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,261:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,263:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,264:INFO:Calculating mean and std
2023-01-09 16:54:31,265:INFO:Creating metrics dataframe
2023-01-09 16:54:31,267:INFO:Finalizing model
2023-01-09 16:54:31,355:INFO:Uploading results into container
2023-01-09 16:54:31,355:INFO:Uploading model into container now
2023-01-09 16:54:31,355:INFO:_master_model_container: 16
2023-01-09 16:54:31,356:INFO:_display_container: 4
2023-01-09 16:54:31,356:INFO:LGBMClassifier(bagging_fraction=0.7, bagging_freq=6, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=66, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=90, n_jobs=-1, num_leaves=90, objective=None,
               random_state=123, reg_alpha=0.0005, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-01-09 16:54:31,356:INFO:create_model() successfully completed......................................
2023-01-09 16:54:31,434:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:31,434:INFO:choose_better activated
2023-01-09 16:54:31,436:INFO:SubProcess create_model() called ==================================
2023-01-09 16:54:31,436:INFO:Initializing create_model()
2023-01-09 16:54:31,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-01-09 16:54:31,436:INFO:Checking exceptions
2023-01-09 16:54:31,438:INFO:Importing libraries
2023-01-09 16:54:31,438:INFO:Copying training dataset
2023-01-09 16:54:31,439:INFO:Defining folds
2023-01-09 16:54:31,439:INFO:Declaring metric variables
2023-01-09 16:54:31,439:INFO:Importing untrained model
2023-01-09 16:54:31,439:INFO:Declaring custom model
2023-01-09 16:54:31,440:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:31,440:INFO:Starting cross validation
2023-01-09 16:54:31,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-01-09 16:54:31,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,578:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,579:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,583:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,584:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,584:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,591:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,591:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,591:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,593:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,594:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,594:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,599:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,600:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,601:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,602:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,602:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,603:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,610:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,610:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,611:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,611:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,611:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,612:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,612:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,613:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,613:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,616:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,616:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,617:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:31,618:INFO:Calculating mean and std
2023-01-09 16:54:31,618:INFO:Creating metrics dataframe
2023-01-09 16:54:31,620:INFO:Finalizing model
2023-01-09 16:54:31,869:INFO:Uploading results into container
2023-01-09 16:54:31,870:INFO:Uploading model into container now
2023-01-09 16:54:31,870:INFO:_master_model_container: 17
2023-01-09 16:54:31,870:INFO:_display_container: 5
2023-01-09 16:54:31,870:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:31,870:INFO:create_model() successfully completed......................................
2023-01-09 16:54:31,945:INFO:SubProcess create_model() end ==================================
2023-01-09 16:54:31,945:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.9493
2023-01-09 16:54:31,946:INFO:LGBMClassifier(bagging_fraction=0.7, bagging_freq=6, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.5,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=66, min_child_weight=0.001, min_split_gain=0.4,
               n_estimators=90, n_jobs=-1, num_leaves=90, objective=None,
               random_state=123, reg_alpha=0.0005, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) result for Accuracy is 0.9439
2023-01-09 16:54:31,946:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) is best model
2023-01-09 16:54:31,946:INFO:choose_better completed
2023-01-09 16:54:31,946:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-01-09 16:54:31,952:INFO:_master_model_container: 17
2023-01-09 16:54:31,952:INFO:_display_container: 4
2023-01-09 16:54:31,952:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:31,953:INFO:tune_model() successfully completed......................................
2023-01-09 16:54:38,302:INFO:Initializing plot_model()
2023-01-09 16:54:38,302:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, system=True)
2023-01-09 16:54:38,302:INFO:Checking exceptions
2023-01-09 16:54:38,303:INFO:Preloading libraries
2023-01-09 16:54:38,312:INFO:Copying training dataset
2023-01-09 16:54:38,312:INFO:Plot type: confusion_matrix
2023-01-09 16:54:38,341:INFO:Fitting Model
2023-01-09 16:54:38,341:INFO:Scoring test/hold-out set
2023-01-09 16:54:38,419:INFO:Visual Rendered Successfully
2023-01-09 16:54:38,491:INFO:plot_model() successfully completed......................................
2023-01-09 16:54:41,757:INFO:Initializing plot_model()
2023-01-09 16:54:41,757:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, system=True)
2023-01-09 16:54:41,757:INFO:Checking exceptions
2023-01-09 16:54:41,759:INFO:Preloading libraries
2023-01-09 16:54:41,771:INFO:Copying training dataset
2023-01-09 16:54:41,771:INFO:Plot type: feature
2023-01-09 16:54:41,771:WARNING:No coef_ found. Trying feature_importances_
2023-01-09 16:54:41,880:INFO:Visual Rendered Successfully
2023-01-09 16:54:41,951:INFO:plot_model() successfully completed......................................
2023-01-09 16:54:44,681:INFO:Initializing evaluate_model()
2023-01-09 16:54:44,681:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-01-09 16:54:44,687:INFO:Initializing plot_model()
2023-01-09 16:54:44,687:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, system=True)
2023-01-09 16:54:44,687:INFO:Checking exceptions
2023-01-09 16:54:44,688:INFO:Preloading libraries
2023-01-09 16:54:44,699:INFO:Copying training dataset
2023-01-09 16:54:44,699:INFO:Plot type: pipeline
2023-01-09 16:54:44,781:INFO:Visual Rendered Successfully
2023-01-09 16:54:44,850:INFO:plot_model() successfully completed......................................
2023-01-09 16:54:51,205:INFO:Initializing predict_model()
2023-01-09 16:54:51,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020B93407790>)
2023-01-09 16:54:51,205:INFO:Checking exceptions
2023-01-09 16:54:51,205:INFO:Preloading libraries
2023-01-09 16:54:51,221:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:51,221:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:51,223:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:51,223:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:54:51,223:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:54:51,224:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 16:54:54,307:INFO:Initializing finalize_model()
2023-01-09 16:54:54,307:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-01-09 16:54:54,307:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-01-09 16:54:54,309:INFO:Initializing create_model()
2023-01-09 16:54:54,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-01-09 16:54:54,309:INFO:Checking exceptions
2023-01-09 16:54:54,310:INFO:Importing libraries
2023-01-09 16:54:54,310:INFO:Copying training dataset
2023-01-09 16:54:54,310:INFO:Defining folds
2023-01-09 16:54:54,310:INFO:Declaring metric variables
2023-01-09 16:54:54,311:INFO:Importing untrained model
2023-01-09 16:54:54,311:INFO:Declaring custom model
2023-01-09 16:54:54,311:INFO:Light Gradient Boosting Machine Imported successfully
2023-01-09 16:54:54,311:INFO:Cross validation set to False
2023-01-09 16:54:54,311:INFO:Fitting Model
2023-01-09 16:54:54,585:INFO:Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-01-09 16:54:54,585:INFO:create_model() successfully completed......................................
2023-01-09 16:54:54,660:INFO:_master_model_container: 17
2023-01-09 16:54:54,661:INFO:_display_container: 5
2023-01-09 16:54:54,665:INFO:Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-01-09 16:54:54,665:INFO:finalize_model() successfully completed......................................
2023-01-09 16:55:39,870:INFO:Initializing predict_model()
2023-01-09 16:55:39,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020B915EAEE0>)
2023-01-09 16:55:39,870:INFO:Checking exceptions
2023-01-09 16:55:39,870:INFO:Preloading libraries
2023-01-09 16:55:39,886:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:39,886:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:39,886:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:39,887:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:39,887:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:39,887:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 16:55:46,242:INFO:Initializing predict_model()
2023-01-09 16:55:46,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020B93C003A0>)
2023-01-09 16:55:46,242:INFO:Checking exceptions
2023-01-09 16:55:46,242:INFO:Preloading libraries
2023-01-09 16:55:46,243:INFO:Set up data.
2023-01-09 16:55:46,246:INFO:Set up index.
2023-01-09 16:55:46,290:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:46,291:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:46,291:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:46,291:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:46,291:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:46,292:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 16:55:52,495:INFO:Initializing predict_model()
2023-01-09 16:55:52,495:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B93BD7040>, estimator=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020B934D1C10>)
2023-01-09 16:55:52,495:INFO:Checking exceptions
2023-01-09 16:55:52,495:INFO:Preloading libraries
2023-01-09 16:55:52,496:INFO:Set up data.
2023-01-09 16:55:52,499:INFO:Set up index.
2023-01-09 16:55:52,519:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:52,519:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:52,519:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:52,520:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-01-09 16:55:52,520:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-01-09 16:55:52,520:WARNING:c:\Users\ANDRE\AppData\Local\Programs\Python\Python38\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-01-09 16:56:17,059:INFO:Initializing save_model()
2023-01-09 16:56:17,060:INFO:save_model(model=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), model_name=Modelo_Final_09_01_23, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-01-09 16:56:17,060:INFO:Adding model into prep_pipe
2023-01-09 16:56:17,070:WARNING:Only Model saved as it was a pipeline.
2023-01-09 16:56:17,081:INFO:Modelo_Final_09_01_23.pkl saved in current working directory
2023-01-09 16:56:17,084:INFO:Pipeline(memory=Memory(location=C:\Users\ANDRE\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[^A-Za-z0-9_]+'))),
                ('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(excl...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-01-09 16:56:17,085:INFO:save_model() successfully completed......................................
